{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ogochkwu/Reddit/blob/main/Reddit_Comment_Classifier.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "L05Ev2e98R2d"
      },
      "source": [
        "## Business Context\n",
        "We are to create a classifier that will accurately classify a list of reddit comments into the proper labels.\n",
        "\n",
        "##Objective\n",
        "\n",
        "### Classifier should run through this list and determine if they are of these categories:\n",
        "\n",
        "- (A) Medical Doctor\n",
        "This label should only include practicing doctors and or consultants to doctors/clinics. Medical school students, nurses or medical professionals who aren’t doctors should go into the “Other” label (C) instead\n",
        "\n",
        "- (B) Veterinarian\n",
        "This label should only include practicing vets and/or consultants to vets/clinics.\n",
        "Veterinarian students or veterinarian technicians should go into the “Other” label (C) instead\n",
        "\n",
        "- (C) Other\n",
        "Anyone who does not fit within the Medical Doctor, or a Veterinarian label\n",
        "\n",
        "## Data Description\n",
        "The data contains the different attributes.\n",
        "The detailed data dictionary is given below.\n",
        "\n",
        "## Data Dictionary\n",
        "\n",
        "- reddit_usernames: the unique identifier of each username\n",
        "- isused: True or FALSE\n",
        "- subreddit: categories\n",
        "- created_at:Date Comments of created\n",
        "- comments: Comments of each username\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "aHqOxj3DfR8w"
      },
      "source": [
        "## Importing necessary libraries and data"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "fFLDyKzK7jC2"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import spacy\n",
        "from sklearn.feature_extraction.text import TfidfVectorizer\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.svm import LinearSVC\n",
        "from sklearn.metrics import accuracy_score\n",
        "from sklearn.pipeline import Pipeline\n",
        "from sklearn.pipeline import make_pipeline\n",
        "from sklearn.feature_extraction.text import CountVectorizer\n",
        "from sklearn.naive_bayes import MultinomialNB\n",
        "from sklearn.model_selection import train_test_split, GridSearchCV\n",
        "from sklearn.svm import SVC\n",
        "from sklearn.metrics import classification_report, accuracy_score\n",
        "import re\n",
        "import string"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 105
        },
        "id": "_hXiiQOjQOKj",
        "outputId": "f6aa62f4-45fc-4474-db9d-23f9c9b7eb59"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-00bf1454-f7a1-4364-839f-050810c129d5\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-00bf1454-f7a1-4364-839f-050810c129d5\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script>// Copyright 2017 Google LLC\n",
              "//\n",
              "// Licensed under the Apache License, Version 2.0 (the \"License\");\n",
              "// you may not use this file except in compliance with the License.\n",
              "// You may obtain a copy of the License at\n",
              "//\n",
              "//      http://www.apache.org/licenses/LICENSE-2.0\n",
              "//\n",
              "// Unless required by applicable law or agreed to in writing, software\n",
              "// distributed under the License is distributed on an \"AS IS\" BASIS,\n",
              "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
              "// See the License for the specific language governing permissions and\n",
              "// limitations under the License.\n",
              "\n",
              "/**\n",
              " * @fileoverview Helpers for google.colab Python module.\n",
              " */\n",
              "(function(scope) {\n",
              "function span(text, styleAttributes = {}) {\n",
              "  const element = document.createElement('span');\n",
              "  element.textContent = text;\n",
              "  for (const key of Object.keys(styleAttributes)) {\n",
              "    element.style[key] = styleAttributes[key];\n",
              "  }\n",
              "  return element;\n",
              "}\n",
              "\n",
              "// Max number of bytes which will be uploaded at a time.\n",
              "const MAX_PAYLOAD_SIZE = 100 * 1024;\n",
              "\n",
              "function _uploadFiles(inputId, outputId) {\n",
              "  const steps = uploadFilesStep(inputId, outputId);\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  // Cache steps on the outputElement to make it available for the next call\n",
              "  // to uploadFilesContinue from Python.\n",
              "  outputElement.steps = steps;\n",
              "\n",
              "  return _uploadFilesContinue(outputId);\n",
              "}\n",
              "\n",
              "// This is roughly an async generator (not supported in the browser yet),\n",
              "// where there are multiple asynchronous steps and the Python side is going\n",
              "// to poll for completion of each step.\n",
              "// This uses a Promise to block the python side on completion of each step,\n",
              "// then passes the result of the previous step as the input to the next step.\n",
              "function _uploadFilesContinue(outputId) {\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  const steps = outputElement.steps;\n",
              "\n",
              "  const next = steps.next(outputElement.lastPromiseValue);\n",
              "  return Promise.resolve(next.value.promise).then((value) => {\n",
              "    // Cache the last promise value to make it available to the next\n",
              "    // step of the generator.\n",
              "    outputElement.lastPromiseValue = value;\n",
              "    return next.value.response;\n",
              "  });\n",
              "}\n",
              "\n",
              "/**\n",
              " * Generator function which is called between each async step of the upload\n",
              " * process.\n",
              " * @param {string} inputId Element ID of the input file picker element.\n",
              " * @param {string} outputId Element ID of the output display.\n",
              " * @return {!Iterable<!Object>} Iterable of next steps.\n",
              " */\n",
              "function* uploadFilesStep(inputId, outputId) {\n",
              "  const inputElement = document.getElementById(inputId);\n",
              "  inputElement.disabled = false;\n",
              "\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  outputElement.innerHTML = '';\n",
              "\n",
              "  const pickedPromise = new Promise((resolve) => {\n",
              "    inputElement.addEventListener('change', (e) => {\n",
              "      resolve(e.target.files);\n",
              "    });\n",
              "  });\n",
              "\n",
              "  const cancel = document.createElement('button');\n",
              "  inputElement.parentElement.appendChild(cancel);\n",
              "  cancel.textContent = 'Cancel upload';\n",
              "  const cancelPromise = new Promise((resolve) => {\n",
              "    cancel.onclick = () => {\n",
              "      resolve(null);\n",
              "    };\n",
              "  });\n",
              "\n",
              "  // Wait for the user to pick the files.\n",
              "  const files = yield {\n",
              "    promise: Promise.race([pickedPromise, cancelPromise]),\n",
              "    response: {\n",
              "      action: 'starting',\n",
              "    }\n",
              "  };\n",
              "\n",
              "  cancel.remove();\n",
              "\n",
              "  // Disable the input element since further picks are not allowed.\n",
              "  inputElement.disabled = true;\n",
              "\n",
              "  if (!files) {\n",
              "    return {\n",
              "      response: {\n",
              "        action: 'complete',\n",
              "      }\n",
              "    };\n",
              "  }\n",
              "\n",
              "  for (const file of files) {\n",
              "    const li = document.createElement('li');\n",
              "    li.append(span(file.name, {fontWeight: 'bold'}));\n",
              "    li.append(span(\n",
              "        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n",
              "        `last modified: ${\n",
              "            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n",
              "                                    'n/a'} - `));\n",
              "    const percent = span('0% done');\n",
              "    li.appendChild(percent);\n",
              "\n",
              "    outputElement.appendChild(li);\n",
              "\n",
              "    const fileDataPromise = new Promise((resolve) => {\n",
              "      const reader = new FileReader();\n",
              "      reader.onload = (e) => {\n",
              "        resolve(e.target.result);\n",
              "      };\n",
              "      reader.readAsArrayBuffer(file);\n",
              "    });\n",
              "    // Wait for the data to be ready.\n",
              "    let fileData = yield {\n",
              "      promise: fileDataPromise,\n",
              "      response: {\n",
              "        action: 'continue',\n",
              "      }\n",
              "    };\n",
              "\n",
              "    // Use a chunked sending to avoid message size limits. See b/62115660.\n",
              "    let position = 0;\n",
              "    do {\n",
              "      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n",
              "      const chunk = new Uint8Array(fileData, position, length);\n",
              "      position += length;\n",
              "\n",
              "      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n",
              "      yield {\n",
              "        response: {\n",
              "          action: 'append',\n",
              "          file: file.name,\n",
              "          data: base64,\n",
              "        },\n",
              "      };\n",
              "\n",
              "      let percentDone = fileData.byteLength === 0 ?\n",
              "          100 :\n",
              "          Math.round((position / fileData.byteLength) * 100);\n",
              "      percent.textContent = `${percentDone}% done`;\n",
              "\n",
              "    } while (position < fileData.byteLength);\n",
              "  }\n",
              "\n",
              "  // All done.\n",
              "  yield {\n",
              "    response: {\n",
              "      action: 'complete',\n",
              "    }\n",
              "  };\n",
              "}\n",
              "\n",
              "scope.google = scope.google || {};\n",
              "scope.google.colab = scope.google.colab || {};\n",
              "scope.google.colab._files = {\n",
              "  _uploadFiles,\n",
              "  _uploadFilesContinue,\n",
              "};\n",
              "})(self);\n",
              "</script> "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saving reddit_usernames_comments.csv to reddit_usernames_comments.csv\n",
            "Saving reddit_usernames.csv to reddit_usernames.csv\n"
          ]
        }
      ],
      "source": [
        "from google.colab import files\n",
        "uploaded = files.upload()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "id": "YEGCwZRKktcJ"
      },
      "outputs": [],
      "source": [
        "# Load the data\n",
        "data1 = pd.read_csv(\"reddit_usernames_comments.csv\")\n",
        "data2 = pd.read_csv(\"reddit_usernames.csv\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "id": "TzMT3FsoeAgJ"
      },
      "outputs": [],
      "source": [
        "# Combine data1 and data2\n",
        "df = pd.concat([data1, data2])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "0EgbiqtEl0O2",
        "outputId": "99c16578-5ca6-4ee9-e75e-1b7f7d7d22cf"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "               username                                           comments  \\\n",
              "0        LoveAGoodTwist  Female, Kentucky.  4 years out. Work equine on...   \n",
              "1            wahznooski  As a woman of reproductive age, fuck Texas|As ...   \n",
              "2  Churro_The_fish_Girl  what makes you want to become a vet?|what make...   \n",
              "3              abarthch  I see of course there are changing variables, ...   \n",
              "4            VoodooKing  I have 412+ and faced issues because wireguard...   \n",
              "\n",
              "  isused subreddit created_at  \n",
              "0    NaN       NaN        NaN  \n",
              "1    NaN       NaN        NaN  \n",
              "2    NaN       NaN        NaN  \n",
              "3    NaN       NaN        NaN  \n",
              "4    NaN       NaN        NaN  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d82a383b-a690-4761-8361-e62b40bddddb\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>username</th>\n",
              "      <th>comments</th>\n",
              "      <th>isused</th>\n",
              "      <th>subreddit</th>\n",
              "      <th>created_at</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>LoveAGoodTwist</td>\n",
              "      <td>Female, Kentucky.  4 years out. Work equine on...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>wahznooski</td>\n",
              "      <td>As a woman of reproductive age, fuck Texas|As ...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Churro_The_fish_Girl</td>\n",
              "      <td>what makes you want to become a vet?|what make...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>abarthch</td>\n",
              "      <td>I see of course there are changing variables, ...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>VoodooKing</td>\n",
              "      <td>I have 412+ and faced issues because wireguard...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d82a383b-a690-4761-8361-e62b40bddddb')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d82a383b-a690-4761-8361-e62b40bddddb button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d82a383b-a690-4761-8361-e62b40bddddb');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-18529ff5-55de-412a-88e9-538907ed23c0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-18529ff5-55de-412a-88e9-538907ed23c0')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-18529ff5-55de-412a-88e9-538907ed23c0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 11535,\n  \"fields\": [\n    {\n      \"column\": \"username\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8258,\n        \"samples\": [\n          \"FantasticExpert8800\",\n          \"NoPresent225\",\n          \"THEOWNINGA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"comments\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3275,\n        \"samples\": [\n          \"Definitely! I graduated May 2023 and I look things up all the time, multiple times per day!\",\n          \"I'm a med student and I'm so sorry that that's your experience with doctors. I have the utmost respect for vets and have never equated human medicine to animal medicine. Granted, I've never brought up that I'm in the medical field unless someone asks, so I'd hope you have nicer clients in the medical field who are more low-key|I'm a med student and I'm so sorry that that's your experience with doctors. I have the utmost respect for vets and have never equated human medicine to animal medicine. Granted, I've never brought up that I'm in the medical field unless someone asks, so I'd hope you have nicer clients in the medical field who are more low-key|I'm a med student and I'm so sorry that that's your experience with doctors. I have the utmost respect for vets and have never equated human medicine to animal medicine. Granted, I've never brought up that I'm in the medical field unless someone asks, so I'd hope you have nicer clients in the medical field who are more low-key|I'm a med student and I'm so sorry that that's your experience with doctors. I have the utmost respect for vets and have never equated human medicine to animal medicine. Granted, I've never brought up that I'm in the medical field unless someone asks, so I'd hope you have nicer clients in the medical field who are more low-key|I'm a med student and I'm so sorry that that's your experience with doctors. I have the utmost respect for vets and have never equated human medicine to animal medicine. Granted, I've never brought up that I'm in the medical field unless someone asks, so I'd hope you have nicer clients in the medical field who are more low-key|I'm a med student and I'm so sorry that that's your experience with doctors. I have the utmost respect for vets and have never equated human medicine to animal medicine. Granted, I've never brought up that I'm in the medical field unless someone asks, so I'd hope you have nicer clients in the medical field who are more low-key\",\n          \"Was averaging 10 and 13 MYST/day prior to mainnet. After three days of mainnet total about .5 MYST and the other node nothing.  Not worth bothering for me anymore until something changes ---> /r/MysteriumNetwork/comments/r4dqtw/no_real_connections_after_upgrading_to_main_net/hmra4rk/\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"isused\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"subreddit\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Veterinary\",\n          \"orchid\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"created_at\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-05-02 00:00:00\",\n        \"max\": \"2024-05-11 00:00:00\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"2024-05-02\",\n          \"2024-05-03\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 6
        }
      ],
      "source": [
        "# Display the first few rows of the dataset\n",
        "df.head()\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 293
        },
        "id": "CSu3Hy9fmVbQ",
        "outputId": "8b0ddd00-4c2d-4d2b-a910-6f852be83568"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[nltk_data] Downloading package punkt to /root/nltk_data...\n",
            "[nltk_data]   Unzipping tokenizers/punkt.zip.\n",
            "[nltk_data] Downloading package stopwords to /root/nltk_data...\n",
            "[nltk_data]   Unzipping corpora/stopwords.zip.\n",
            "[nltk_data] Downloading package wordnet to /root/nltk_data...\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "               username                                           comments  \\\n",
              "0        LoveAGoodTwist  Female, Kentucky.  4 years out. Work equine on...   \n",
              "1            wahznooski  As a woman of reproductive age, fuck Texas|As ...   \n",
              "2  Churro_The_fish_Girl  what makes you want to become a vet?|what make...   \n",
              "3              abarthch  I see of course there are changing variables, ...   \n",
              "4            VoodooKing  I have 412+ and faced issues because wireguard...   \n",
              "\n",
              "  isused subreddit created_at  \\\n",
              "0    NaN       NaN        NaN   \n",
              "1    NaN       NaN        NaN   \n",
              "2    NaN       NaN        NaN   \n",
              "3    NaN       NaN        NaN   \n",
              "4    NaN       NaN        NaN   \n",
              "\n",
              "                                       clean_comment  \n",
              "0  female kentucky year work equine private pract...  \n",
              "1  woman reproductive age fuck texasas woman repr...  \n",
              "2  make want become vetwhat make want become vetw...  \n",
              "3  see course changing variable dimension change ...  \n",
              "4  faced issue wireguard natively supported hence...  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a0f7b5e3-5756-4acd-81e7-1abea149e126\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>username</th>\n",
              "      <th>comments</th>\n",
              "      <th>isused</th>\n",
              "      <th>subreddit</th>\n",
              "      <th>created_at</th>\n",
              "      <th>clean_comment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>LoveAGoodTwist</td>\n",
              "      <td>Female, Kentucky.  4 years out. Work equine on...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>female kentucky year work equine private pract...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>wahznooski</td>\n",
              "      <td>As a woman of reproductive age, fuck Texas|As ...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>woman reproductive age fuck texasas woman repr...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Churro_The_fish_Girl</td>\n",
              "      <td>what makes you want to become a vet?|what make...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>make want become vetwhat make want become vetw...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>abarthch</td>\n",
              "      <td>I see of course there are changing variables, ...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>see course changing variable dimension change ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>VoodooKing</td>\n",
              "      <td>I have 412+ and faced issues because wireguard...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>faced issue wireguard natively supported hence...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a0f7b5e3-5756-4acd-81e7-1abea149e126')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a0f7b5e3-5756-4acd-81e7-1abea149e126 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a0f7b5e3-5756-4acd-81e7-1abea149e126');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9057a00b-4a04-4449-afc2-ec2c5fb0c207\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9057a00b-4a04-4449-afc2-ec2c5fb0c207')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9057a00b-4a04-4449-afc2-ec2c5fb0c207 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 11535,\n  \"fields\": [\n    {\n      \"column\": \"username\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8258,\n        \"samples\": [\n          \"FantasticExpert8800\",\n          \"NoPresent225\",\n          \"THEOWNINGA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"comments\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3275,\n        \"samples\": [\n          \"Definitely! I graduated May 2023 and I look things up all the time, multiple times per day!\",\n          \"I'm a med student and I'm so sorry that that's your experience with doctors. I have the utmost respect for vets and have never equated human medicine to animal medicine. Granted, I've never brought up that I'm in the medical field unless someone asks, so I'd hope you have nicer clients in the medical field who are more low-key|I'm a med student and I'm so sorry that that's your experience with doctors. I have the utmost respect for vets and have never equated human medicine to animal medicine. Granted, I've never brought up that I'm in the medical field unless someone asks, so I'd hope you have nicer clients in the medical field who are more low-key|I'm a med student and I'm so sorry that that's your experience with doctors. I have the utmost respect for vets and have never equated human medicine to animal medicine. Granted, I've never brought up that I'm in the medical field unless someone asks, so I'd hope you have nicer clients in the medical field who are more low-key|I'm a med student and I'm so sorry that that's your experience with doctors. I have the utmost respect for vets and have never equated human medicine to animal medicine. Granted, I've never brought up that I'm in the medical field unless someone asks, so I'd hope you have nicer clients in the medical field who are more low-key|I'm a med student and I'm so sorry that that's your experience with doctors. I have the utmost respect for vets and have never equated human medicine to animal medicine. Granted, I've never brought up that I'm in the medical field unless someone asks, so I'd hope you have nicer clients in the medical field who are more low-key|I'm a med student and I'm so sorry that that's your experience with doctors. I have the utmost respect for vets and have never equated human medicine to animal medicine. Granted, I've never brought up that I'm in the medical field unless someone asks, so I'd hope you have nicer clients in the medical field who are more low-key\",\n          \"Was averaging 10 and 13 MYST/day prior to mainnet. After three days of mainnet total about .5 MYST and the other node nothing.  Not worth bothering for me anymore until something changes ---> /r/MysteriumNetwork/comments/r4dqtw/no_real_connections_after_upgrading_to_main_net/hmra4rk/\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"isused\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"subreddit\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Veterinary\",\n          \"orchid\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"created_at\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-05-02 00:00:00\",\n        \"max\": \"2024-05-11 00:00:00\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"2024-05-02\",\n          \"2024-05-03\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"clean_comment\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3274,\n        \"samples\": [\n          \"reason run node xb xb p would great umystteam took look thishttpswwwredditcomrmysteriumnetworkcommentsswxddmakingrunningamysteriumnodelegalandsafein though concern node runnersyeah verified partner traffic basically sadly corporatish talk say vouche traffic anything go still wrong supposed entrust elusive unnamed validity checker entity come court room plead case wouldnt bet legal defense operator dvpn network exact reason wanted part network independence ownership one data privacy would choose way able vouche traffic mean defend case legal trouble thats big one whats worth decentralized vpn node runner would rely centralized authority back legal safetytwo thing thats one person one country saying twas run node without log hand worth nothing french authority example one guy isnt really pertinent torrenting kind least serious thing could concerned legally think already gave example would prompt authority anywhere give fuck argument twas run node dont mean prove someone el nodeui log however arent detailed yeah confirm protected french law abovementioned detail log worth nothing proof good enough assume may innocent whether judge like face coffee morning xb government pretty strict thing shut internet infraction yup even though kinda slow hadopi went many change wonky system even technically fair amount reason receive notice never receive short enough period first still valid counting x counter xb also assume mysterium whitelisted traffic benign exactly part point reason run dvpn rely isps centralized vpn provider willingness screw u data monitoring selling running dvpn node decentralized vpn node exact reason could rely centralized committeedeciding entity validate ok run connection could validation ever prevent validated party missbehave said centralized validation body would ever care able plea node runner innocence infraction committed validated partnersokay great multiple people still case one single country jurisdiction still solely copyright issue yes know whitelisting basically excludes nonmysterium approved traffic basically excludes private user randos together basically defeat reason im running node give wider le censored internet access people individual entity organizationssame think around session benin previous biggest client hgb japanese ipit seems like ping uptimelatency netherland bigger community dvpn clientsfor week running node keep going rate every week big client like fucking offset powerdraw whole rack mysteriumfrench residential ip dont mind answering enough old comment french speaking stuff happening france im already countrydoxedhttpswwwredditcomrmysteriumnetworkcommentssuacdzcommenthxaexcutmsourceshareutmmediumwebxcontextthis reason run node xb xb p would great umystteam took look thishttpswwwredditcomrmysteriumnetworkcommentsswxddmakingrunningamysteriumnodelegalandsafein though concern node runnersyeah verified partner traffic basically sadly corporatish talk say vouche traffic anything go still wrong supposed entrust elusive unnamed validity checker entity come court room plead case wouldnt bet legal defense operator dvpn network exact reason wanted part network independence ownership one data privacy would choose way able vouche traffic mean defend case legal trouble thats big one whats worth decentralized vpn node runner would rely centralized authority back legal safetytwo thing thats one person one country saying twas run node without log hand worth nothing french authority example one guy isnt really pertinent torrenting kind least serious thing could concerned legally think already gave example would prompt authority anywhere give fuck argument twas run node dont mean prove someone el nodeui log however arent detailed yeah confirm protected french law abovementioned detail log worth nothing proof good enough assume may innocent whether judge like face coffee morning xb government pretty strict thing shut internet infraction yup even though kinda slow hadopi went many change wonky system even technically fair amount reason receive notice never receive short enough period first still valid counting x counter xb also assume mysterium whitelisted traffic benign exactly part point reason run dvpn rely isps centralized vpn provider willingness screw u data monitoring selling running dvpn node decentralized vpn node exact reason could rely centralized committeedeciding entity validate ok run connection could validation ever prevent validated party missbehave said centralized validation body would ever care able plea node runner innocence infraction committed validated partnersokay great multiple people still case one single country jurisdiction still solely copyright issue yes know whitelisting basically excludes nonmysterium approved traffic basically excludes private user randos together basically defeat reason im running node give wider le censored internet access people individual entity organizationssame think around session benin previous biggest client hgb japanese ipit seems like ping uptimelatency netherland bigger community dvpn clientsfor week running node keep going rate every week big client like fucking offset powerdraw whole rack mysteriumfrench residential ip dont mind answering enough old comment french speaking stuff happening france im already countrydoxedhttpswwwredditcomrmysteriumnetworkcommentssuacdzcommenthxaexcutmsourceshareutmmediumwebxcontextthis reason run node xb xb p would great umystteam took look thishttpswwwredditcomrmysteriumnetworkcommentsswxddmakingrunningamysteriumnodelegalandsafein though concern node runnersyeah verified partner traffic basically sadly corporatish talk say vouche traffic anything go still wrong supposed entrust elusive unnamed validity checker entity come court room plead case wouldnt bet legal defense operator dvpn network exact reason wanted part network independence ownership one data privacy would choose way able vouche traffic mean defend case legal trouble thats big one whats worth decentralized vpn node runner would rely centralized authority back legal safetytwo thing thats one person one country saying twas run node without log hand worth nothing french authority example one guy isnt really pertinent torrenting kind least serious thing could concerned legally think already gave example would prompt authority anywhere give fuck argument twas run node dont mean prove someone el nodeui log however arent detailed yeah confirm protected french law abovementioned detail log worth nothing proof good enough assume may innocent whether judge like face coffee morning xb government pretty strict thing shut internet infraction yup even though kinda slow hadopi went many change wonky system even technically fair amount reason receive notice never receive short enough period first still valid counting x counter xb also assume mysterium whitelisted traffic benign exactly part point reason run dvpn rely isps centralized vpn provider willingness screw u data monitoring selling running dvpn node decentralized vpn node exact reason could rely centralized committeedeciding entity validate ok run connection could validation ever prevent validated party missbehave said centralized validation body would ever care able plea node runner innocence infraction committed validated partnersokay great multiple people still case one single country jurisdiction still solely copyright issue yes know whitelisting basically excludes nonmysterium approved traffic basically excludes private user randos together basically defeat reason im running node give wider le censored internet access people individual entity organizationssame think around session benin previous biggest client hgb japanese ipit seems like ping uptimelatency netherland bigger community dvpn clientsfor week running node keep going rate every week big client like fucking offset powerdraw whole rack mysteriumfrench residential ip dont mind answering enough old comment french speaking stuff happening france im already countrydoxedhttpswwwredditcomrmysteriumnetworkcommentssuacdzcommenthxaexcutmsourceshareutmmediumwebxcontextthis reason run node xb xb p would great umystteam took look thishttpswwwredditcomrmysteriumnetworkcommentsswxddmakingrunningamysteriumnodelegalandsafein though concern node runnersyeah verified partner traffic basically sadly corporatish talk say vouche traffic anything go still wrong supposed entrust elusive unnamed validity checker entity come court room plead case wouldnt bet legal defense operator dvpn network exact reason wanted part network independence ownership one data privacy would choose way able vouche traffic mean defend case legal trouble thats big one whats worth decentralized vpn node runner would rely centralized authority back legal safetytwo thing thats one person one country saying twas run node without log hand worth nothing french authority example one guy isnt really pertinent torrenting kind least serious thing could concerned legally think already gave example would prompt authority anywhere give fuck argument twas run node dont mean prove someone el nodeui log however arent detailed yeah confirm protected french law abovementioned detail log worth nothing proof good enough assume may innocent whether judge like face coffee morning xb government pretty strict thing shut internet infraction yup even though kinda slow hadopi went many change wonky system even technically fair amount reason receive notice never receive short enough period first still valid counting x counter xb also assume mysterium whitelisted traffic benign exactly part point reason run dvpn rely isps centralized vpn provider willingness screw u data monitoring selling running dvpn node decentralized vpn node exact reason could rely centralized committeedeciding entity validate ok run connection could validation ever prevent validated party missbehave said centralized validation body would ever care able plea node runner innocence infraction committed validated partnersokay great multiple people still case one single country jurisdiction still solely copyright issue yes know whitelisting basically excludes nonmysterium approved traffic basically excludes private user randos together basically defeat reason im running node give wider le censored internet access people individual entity organizationssame think around session benin previous biggest client hgb japanese ipit seems like ping uptimelatency netherland bigger community dvpn clientsfor week running node keep going rate every week big client like fucking offset powerdraw whole rack mysteriumfrench residential ip dont mind answering enough old comment french speaking stuff happening france im already countrydoxedhttpswwwredditcomrmysteriumnetworkcommentssuacdzcommenthxaexcutmsourceshareutmmediumwebxcontextthis reason run node xb xb p would great umystteam took look thishttpswwwredditcomrmysteriumnetworkcommentsswxddmakingrunningamysteriumnodelegalandsafein though concern node runnersyeah verified partner traffic basically sadly corporatish talk say vouche traffic anything go still wrong supposed entrust elusive unnamed validity checker entity come court room plead case wouldnt bet legal defense operator dvpn network exact reason wanted part network independence ownership one data privacy would choose way able vouche traffic mean defend case legal trouble thats big one whats worth decentralized vpn node runner would rely centralized authority back legal safetytwo thing thats one person one country saying twas run node without log hand worth nothing french authority example one guy isnt really pertinent torrenting kind least serious thing could concerned legally think already gave example would prompt authority anywhere give fuck argument twas run node dont mean prove someone el nodeui log however arent detailed yeah confirm protected french law abovementioned detail log worth nothing proof good enough assume may innocent whether judge like face coffee morning xb government pretty strict thing shut internet infraction yup even though kinda slow hadopi went many change wonky system even technically fair amount reason receive notice never receive short enough period first still valid counting x counter xb also assume mysterium whitelisted traffic benign exactly part point reason run dvpn rely isps centralized vpn provider willingness screw u data monitoring selling running dvpn node decentralized vpn node exact reason could rely centralized committeedeciding entity validate ok run connection could validation ever prevent validated party missbehave said centralized validation body would ever care able plea node runner innocence infraction committed validated partnersokay great multiple people still case one single country jurisdiction still solely copyright issue yes know whitelisting basically excludes nonmysterium approved traffic basically excludes private user randos together basically defeat reason im running node give wider le censored internet access people individual entity organizationssame think around session benin previous biggest client hgb japanese ipit seems like ping uptimelatency netherland bigger community dvpn clientsfor week running node keep going rate every week big client like fucking offset powerdraw whole rack mysteriumfrench residential ip dont mind answering enough old comment french speaking stuff happening france im already countrydoxedhttpswwwredditcomrmysteriumnetworkcommentssuacdzcommenthxaexcutmsourceshareutmmediumwebxcontextthis reason run node xb xb p would great umystteam took look thishttpswwwredditcomrmysteriumnetworkcommentsswxddmakingrunningamysteriumnodelegalandsafein though concern node runnersyeah verified partner traffic basically sadly corporatish talk say vouche traffic anything go still wrong supposed entrust elusive unnamed validity checker entity come court room plead case wouldnt bet legal defense operator dvpn network exact reason wanted part network independence ownership one data privacy would choose way able vouche traffic mean defend case legal trouble thats big one whats worth decentralized vpn node runner would rely centralized authority back legal safetytwo thing thats one person one country saying twas run node without log hand worth nothing french authority example one guy isnt really pertinent torrenting kind least serious thing could concerned legally think already gave example would prompt authority anywhere give fuck argument twas run node dont mean prove someone el nodeui log however arent detailed yeah confirm protected french law abovementioned detail log worth nothing proof good enough assume may innocent whether judge like face coffee morning xb government pretty strict thing shut internet infraction yup even though kinda slow hadopi went many change wonky system even technically fair amount reason receive notice never receive short enough period first still valid counting x counter xb also assume mysterium whitelisted traffic benign exactly part point reason run dvpn rely isps centralized vpn provider willingness screw u data monitoring selling running dvpn node decentralized vpn node exact reason could rely centralized committeedeciding entity validate ok run connection could validation ever prevent validated party missbehave said centralized validation body would ever care able plea node runner innocence infraction committed validated partnersokay great multiple people still case one single country jurisdiction still solely copyright issue yes know whitelisting basically excludes nonmysterium approved traffic basically excludes private user randos together basically defeat reason im running node give wider le censored internet access people individual entity organizationssame think around session benin previous biggest client hgb japanese ipit seems like ping uptimelatency netherland bigger community dvpn clientsfor week running node keep going rate every week big client like fucking offset powerdraw whole rack mysteriumfrench residential ip dont mind answering enough old comment french speaking stuff happening france im already countrydoxedhttpswwwredditcomrmysteriumnetworkcommentssuacdzcommenthxaexcutmsourceshareutmmediumwebxcontextthis reason run node xb xb p would great umystteam took look thishttpswwwredditcomrmysteriumnetworkcommentsswxddmakingrunningamysteriumnodelegalandsafein though concern node runnersyeah verified partner traffic basically sadly corporatish talk say vouche traffic anything go still wrong supposed entrust elusive unnamed validity checker entity come court room plead case wouldnt bet legal defense operator dvpn network exact reason wanted part network independence ownership one data privacy would choose way able vouche traffic mean defend case legal trouble thats big one whats worth decentralized vpn node runner would rely centralized authority back legal safetytwo thing thats one person one country saying twas run node without log hand worth nothing french authority example one guy isnt really pertinent torrenting kind least serious thing could concerned legally think already gave example would prompt authority anywhere give fuck argument twas run node dont mean prove someone el nodeui log however arent detailed yeah confirm protected french law abovementioned detail log worth nothing proof good enough assume may innocent whether judge like face coffee morning xb government pretty strict thing shut internet infraction yup even though kinda slow hadopi went many change wonky system even technically fair amount reason receive notice never receive short enough period first still valid counting x counter xb also assume mysterium whitelisted traffic benign exactly part point reason run dvpn rely isps centralized vpn provider willingness screw u data monitoring selling running dvpn node decentralized vpn node exact reason could rely centralized committeedeciding entity validate ok run connection could validation ever prevent validated party missbehave said centralized validation body would ever care able plea node runner innocence infraction committed validated partnersokay great multiple people still case one single country jurisdiction still solely copyright issue yes know whitelisting basically excludes nonmysterium approved traffic basically excludes private user randos together basically defeat reason im running node give wider le censored internet access people individual entity organizationssame think around session benin previous biggest client hgb japanese ipit seems like ping uptimelatency netherland bigger community dvpn clientsfor week running node keep going rate every week big client like fucking offset powerdraw whole rack mysteriumfrench residential ip dont mind answering enough old comment french speaking stuff happening france im already countrydoxedhttpswwwredditcomrmysteriumnetworkcommentssuacdzcommenthxaexcutmsourceshareutmmediumwebxcontext reason run node xb xb p would great umystteam took look thishttpswwwredditcomrmysteriumnetworkcommentsswxddmakingrunningamysteriumnodelegalandsafein though concern node runner rmysteriumnetworkcommentstdtmysteriumnetworkstandswithukraineforfreedomhyjwst polygon network hour straight house isnt fire city rmysteriumnetworkcommentstbevunodeuiunabletoloadilv hi nice see actual expert domain opinion nothing tinkerer herehttpswwwredditcomrmysteriumnetworkcommentssjqmiresidentialsecurityconcernskindstrangerdo post made back started running node somehttpswwwredditcomrmysteriumnetworkcommentssjqmicommenthwbwilutmsourceshareutmmediumwebxcontext extra step took considered would advocate mysterium node frontfacing thing period never ran natively went ahead start unsupported configuration running sudoer user dedicated unprivileged lxc container fairly extended firewalling host proxmox honest would prefer mysterium node distributed kind form turnkey lxc package example little overhead good perfs great isolationsegregation rmysteriumnetworkcommentstabqnodesecurityisridiculousiwele well defo joined cause discussed pro con concern community herehttpswwwredditcomrmysteriumnetworkcommentssjqmiresidentialsecurityconcernskindstrangerdo facing configuration issue lxc container due host kernel type fixing discussing security issue mishap cause safeguard around herehttpswwwredditcomrmysteriumnetworkcommentssnwzzbwellsomeoneshavingadownloadingspreeisee sharing amusement first big client mysterium network answering question asked member configuration made sure nothing reach internal network even proper default mysterium node configuration shouldnt allow herehttpswwwredditcomrmysteriumnetworkcommentssuacdzanewbigclientwhodecidedtodownloadthe sharing second big client mean tb warrant herehttpswwwredditcomrmysteriumnetworkcommentsswxddmakingrunningamysteriumnodelegalandsafein topic would really like mysteriums people actually give opinion leave saw important matter also protect node runner choice make mysterium entity step integrate feature let node runner defend either way meantime people like keep logging metering node reason given post herehttpswwwredditcomrmysteriumnetworkcommentstdsmdayslatermyzombieflowrateinformative month recap running node rmysteriumnetworkcommentstsvxtheworldneedsmysteriumandmysteriumneedshzdsrq hi thanks reply admit noticed upetersovietsquirrel part team focused answering every incoming observation opinion best could understand position sadly doubt would suffice france trouble indeed let noderunner deny responsibility activity taken court could still lead fine sanction running somewhat critical service without proper mandatory lawsee ref traceability allowing bad actor stay reach example germany guy contacted right holder copyright issue france youre directly facing hadopi arcomhttpsenwikipediaorgwikiregulatoryauthorityforaudiovisualanddigitalcommunication notice warning cant rebut fully without going court third given time period uplink shut cop knock door unless youre running website mail address contacted concerning copyright ip amicable step talking right holder beforehand xb keep mind though raising really concern relatively mundane stuff like torrenting using country netflix geolocked catalogue even still end sanction like fine way sensitive crime like cyber attack child medium french authority like anssihttpsenwikipediaorgwikiagencenationaledelascacuritcadessystcamesdinformation would descend hard roadblock investigation made actual criminal unreachable possibly charge accomplice xb concerning nolog policy want abide hear wont push though see bit marketing buzzword vpn world matter context like transparency control hence im much vision web hence would wished node runner option define transparently disclose policy logging every dvpnclient see client interface hope maybe network consider implement properly ill still hanging community participating running node though custom filtering rule inside outside lxc container avoid abuse take pledge stir topic logging outside threadhttpswwwredditcomrmysteriumnetworkcommentsswxddmakingrunningamysteriumnodelegalandsafein disturb community starting useless debate though would happy discus question raised officially one day also added edit thread xb post scriptum law reference oldermore obscure law core event lcen linkfrhttpswwwlegifrancegouvfrlodaidjorftext law ironed data conservation obligation isps counter terrorism law made law apply proxy public wifi internet cafe proxy vpns linkfrhttpswwwlegifrancegouvfrlodaidjorftext article l cpce modification polished relationship two law linkfrhttpswwwlegifrancegouvfrcodesarticlelclegiarti dynamic active version linkfrhttpswwwlegifrancegouvfrlodaidjorftext french law shitty make distributed version control system today top sentence collecting appropriate lawmandate log physical person pro independently infraction committed user service fine year jail court justice european union starting try chip french law far still effect xb bit fun lore european union directivehttpseurlexeuropaeulegalcontentfralluricelexal linkwikifrhttpsfrwikipediaorgwikidirectivecesurlaconservationdesdonncaeslinkwikienhttpsenwikipediaorgwikidataretentiondirective reference many european country personal law data retention motivated changeshardening preexisting one even though cancelled april th country european union integrated law andor iterated make severecovering eu country afaik doesnt thisharsh overlapping law kind logging since directive cancellation germany rmysteriumnetworkcommentstsvxtheworldneedsmysteriumandmysteriumneedsibbk earnings waiting settled true balance moment havent withdrawn far rmysteriumnetworkcommentstdsmdayslatermyzombieflowrateinformativehzvs residential ip unprivileged networksegregated lxc container rmysteriumnetworkcommentstdsmdayslatermyzombieflowrateinformativehyytet done firewall rule ingres egress webui exception one device network necessary communication gateway establish connection drop reject every port every ip range use subnets note fucking idea wsl window havent touched im running proxmox stability mind security stability wise though havent seen reboot looked tbh left container run day service inside lxc container restarted visible effect rmysteriumnetworkcommentstdsmdayslatermyzombieflowrateinformativehzwdlc yeah verified partner traffic basically sadly corporatish talk say vouche traffic anything go still wrong supposed entrust elusive unnamed validity checker entity come court room plead case wouldnt bet legal defense operator dvpn network exact reason wanted part network independence ownership one data privacy would choose way able vouche traffic mean defend case legal trouble thats big one whats worth decentralized vpn node runner would rely centralized authority back legal safety rmysteriumnetworkcommentsswxddmakingrunningamysteriumnodelegalandsafeinhxtp two thing thats one person one country saying twas run node without log hand worth nothing french authority example one guy isnt really pertinent torrenting kind least serious thing could concerned legally think already gave example would prompt authority anywhere give fuck argument twas run node dont mean prove someone el rmysteriumnetworkcommentsswxddmakingrunningamysteriumnodelegalandsafeinhxtyyk nodeui log however arent detailed yeah confirm protected french law abovementioned detail log worth nothing proof good enough assume may innocent whether judge like face coffee morning xb government pretty strict thing shut internet infraction yup even though kinda slow hadopi went many change wonky system even technically fair amount reason receive notice never receive short enough period first still valid counting x counter xb also assume mysterium whitelisted traffic benign exactly part point reason run dvpn rely isps centralized vpn provider willingness screw u data monitoring selling running dvpn node decentralized vpn node exact reason could rely centralized committeedeciding entity validate ok run connection could validation ever prevent validated party missbehave said centralized validation body would ever care able plea node runner innocence infraction committed validated partner rmysteriumnetworkcommentsswxddmakingrunningamysteriumnodelegalandsafeinhyjwy okay great multiple people still case one single country jurisdiction still solely copyright issue yes know whitelisting basically excludes nonmysterium approved traffic basically excludes private user randos together basically defeat reason im running node give wider le censored internet access people individual entity organization rmysteriumnetworkcommentsswxddmakingrunningamysteriumnodelegalandsafeinhxxhtr well chromebook mean likely youre still running chromeos aka gentoo linux isnt really like standard debian based linux example running native node randos connect isnt really best thing either anything go wrong would say sake simplicity best shot would first run unprivileged lxc container install small debian based image make sure connect internet get ip local network sake easy portforwarding would let proper install doesnt affect host configuration absolute control needed follow standard linux cli install come resource full o lxc container proxmox node running session active doesnt use gig storage space half assigned mb ram bit storage heavy overall light run wan na add layer security possibly go iptables chromeosgentoo host isolate iprange network minus node webui port minus gateway communication still blocking sensitive stuff like gateway webui port like xb xb important note already node running second node ip doesnt make positive change might even penalize rmysteriumnetworkcommentssvyahzhelpsettingnodeuponchromebookhxjjgmg thought little tip give gig storage space total lxc container using lean debian image node install script would fail gig virtual drive unpacking go amount xb encounter issue want detail went setup find long read previous post mine encountered missconfigurations installation weird behavior really wasnt thing go firewall configuration ect herehttpswwwredditcomrmysteriumnetworkcommentssjqmiresidentialsecurityconcernskindstrangerdo see herehttpswwwredditcomrmysteriumnetworkcommentssnwzzbcommenthwjcutmsourceshareutmmediumwebxcontext someone went firewall configuration docker install havent done wanted know would go keep mind though im expert word good anyone el dont afraid complementary research rmysteriumnetworkcommentssvyahzhelpsettingnodeuponchromebookhxkyg think around session benin previous biggest client hgb japanese ip rmysteriumnetworkcommentssuacdzanewbigclientwhodecidedtodownloadthehxahqi seems like ping uptimelatency netherland bigger community dvpn client rmysteriumnetworkcommentssuacdzanewbigclientwhodecidedtodownloadthehxahoy week running node keep going rate every week big client like fucking offset powerdraw whole rack mysterium rmysteriumnetworkcommentssuacdzanewbigclientwhodecidedtodownloadthehxhtfa french residential ip dont mind answering enough old comment french speaking stuff happening france im already countrydoxed rmysteriumnetworkcommentssuacdzanewbigclientwhodecidedtodownloadthehxaexc httpswwwredditcomrmysteriumnetworkcommentssuacdzcommenthxaexcutmsourceshareutmmediumwebxcontext rmysteriumnetworkcommentssuacdzanewbigclientwhodecidedtodownloadthehxdmy hey hi followed issue repo actuallyintended default configuration look fine best clearly mindful would guess caused behavior setup somehow wireguard myst didnt configured properly issue interacting fluke know lxc container even though modification done mysterium install script work spoof generic linux header fill missing packet add gpg repo key manually something quirk default debiancontainerimage provided proxmox might borked something solved issue end ill keep firewall goodbehavior cage around container peace mind added layer security might specific kind installation bork like easily adding way review modify wireguard firewall config parameter applied ephemeral wireguard interface directly webui would allow plugplayexpecting beginnersneophytes warned troubleshoot fix issue especially since everyone would go clean install strictly supported tested distroconfig maybe mindful feature implement near future xb thank usteccas taking time day file issue follow rmysteriumnetworkcommentssjqmiresidentialsecurityconcernskindstrangerdohvon excuuuuse chucklenut even thats lot word tldrrtfm jimmy rustled seems expressly follow native linux install guide aka fucking manual havent touched mysterium configures wireguard default dont want want node setforget dont want maintenance whatever would done would break later mystdevs change something tweak linux header install process patch missing packet using snapshot launch install get errored snapshot rollback preinstall packet get errored step rinse repeat im venting fact default install aka book look concerning oversight configuration rmysteriumnetworkcommentssjqmiresidentialsecurityconcernskindstrangerdohveop using docker let someone achieve even host isolation lxc unpriviledged container case commend mysteriums guide least advise beginner create sudoer user instead running node root worried beginnersneophytes would run node baremetal like rasppi old spare laptopcomputer possibly slew vulnerability worse even service running box could badly interact andor exploited plus fact case cant firewall outside like container without proper firewall box plugged userfriendly market end user moreoftenthannot using isps holly router sole smart network equipment also think better work prevent bad traffic node taken yes indeed proxmox firewalling container denied interaction egress ingres full ip range used host networkminus gateway along sensitive gateway port like webui example port would allow gather information makersoftware gateway exception made needed thing node webui still reachable select host technically node container could even rooted ever still couldnt touch lan imo thats personal view given stake running wide open vpn node residential network mysterium node advised used containerized form dockerlxclxd since theyre aiming talking mainly beginner audience docker lxdusing snap let run fine rasppi without risk distributing readytorun container would also avoid chance flukemissconfiguration upon installation concerning contribution plan dns filtering yes yes would welcomed god yes monitoring saw issue thread thinking graphana integration possibility would great whenever create repo push something consider satisfactory need people betatest dont hesitate ping want add edit top post everyone benefit rmysteriumnetworkcommentssjqmiresidentialsecurityconcernskindstrangerdohvoyhzr say know youre supposed least peace mind instead brutblocking shit like creature habit keyboard facepalmer wanted know mysteriums outofthebox experience behavior almost typical residential network observe enemy since dapp advertises userfriendlybeginnerfriendly secure vpn took actually test claim following install guide extra smart stuff aside proxmoxlxc image specific patching ups allowed see mysterium behaves box controlled environment solely already fairly hardened host network host network restrictive firewall ssl certificate local ca ssh key ect critical shit like ipmi interface proxmoxs datacenter access segregated network together network tested managed residential offtheshelffrommyisp router fairly standard config feature average consumer came back report saw give head neophytebeginner node runner may followed tutorial install spare laptop rasppi lying around maaaay post flaired alert question rmysteriumnetworkcommentssjqmiresidentialsecurityconcernskindstrangerdohveszrn mhm basically something know config selfhost like nginxcertbot reverseproxycertification setup assumed youre gon na trust tutorial whoever blogposter content creator learn know start little journey security mind mysterium present setforget node client competing space centralized vpns exactly target obviously curioustinkerer one ultimately communication leveled speak end user mean endusers little skillknowledge requirement announced thus node runner guide roughly length dvpn user guide appearance thus simple straightforward thats marketed mysterium team well every content creator saw talking encouraging whoever give ear set node raspberrypi flashing heading straight webui configuration else spare computer spin fresh install ubuntu debian install myst jump webui configuration section guide actually talk firewall nat solely troubleshooting offline node aka tell punch hole really anything plugging hole xb wouldnt say mysterium bad indeed node runner responsibility secure network install shit cant control share fault wouldnt advertise sport car beginner friendly car new driver probation license omit tell delivered ab toggled rmysteriumnetworkcommentssjqmiresidentialsecurityconcernskindstrangerdohvhmr block webui rule using container ipsubnet container localhost wich rule use suggestion concerning webui specifically actually limited outsidecontainer firewall ingres container port source specific network ip dropping every source admit took action protect node webui dvpnclients connecting node shouldnt needed node config applied properly im worried webuis password character long reused anywhere else well root password unpriviledged lxc container well sudoer user password im running decentralized vpn node profit conviction nothing could webui could damage network worse case scenario steal mystt dont care xb come firewall rule firewalling specific setup reiterate im security expert expert anything suggestion would curious see much youll roast firewalling anything second keep mind container firewall configured host applied virtual nic host perspective leaving source ip blank firewall egress nic mean catch potential ip node may use egress default output policy accept let start first destination port node never contact ever using vpn clearly trying poke around reject udp remote syslog tcp active directory samba share previously also netbios old window version tcpudp m rpc tcpudp netbios ip legacy udp snmp technically block irc port tcp lot botnet use since run node per conviction help stop speechinfo censorship want irc chat reachable reject egress macro http http destined precise ip cidr subnets gateway protect web interface reject egress ipset represents static ip server host subnets cidrmultiple proxmox node unraid na redundant rule bellow eh peace mind moron ipset take subnets ip range cidr minus one gateway cidr reject egress need talk bit network structured like shit im fiber gbps mbps isp stable location hence im doesnt deliver modem router router onboard integrated modem sfp slot coax anything legit single mode fiber cable wallplate internet box wanted use equipment would proprietary firmware ont sfp hacking journey even successful could fail day without notice whenever isp change something side also shitty box doesnt support anything link aggregationdacptrunk multiple subnets ip range superior vlans gbps port threw together small opnsense box manages subnets including ipmi management one one dedicated host administration like ssh webuis proxmox unraid main subnet directly onto isp router opnsense box low power salvage would struggle much kind throughput hence last egress rule specific setup dedicated patch issue shitty routergateway im stuck really relevant list youre curious here nice examplehttpswwwcvedetailscomcvecve one previous model isp hence lack trust default think putting reject egress would gateway destination port like example still setup specific dont feel comfy sharing honest expose overlooked something important could exploited didnt brainderp allow node wide access world wide web port minus one nonsense category excluding subnets host reachable still worse case scenario allows sense gateway know makertype xb ingres default input policy drop using alias represent allowed ip node network thus excluding potential spawn would default drop ingres defined rule alias accept ingres webui ssh ipset specific cidr local ip drop little list outright source ingres peace mind source im almost sure mistake far people connecting node dont seem distraught since client hour long session reject port ipset subnets cidrs minus gateway cleaner drop local network rule default host containersvm reduce propagation risk compromised host reject macro httpshttpldap ingres dont want people use webhost im selfhosting stuff doesnt seem good idea denying ldap avoid used proxy logj exploit use ldap probably lot couldshould block accept range let client connect node widest range port us listens left little space middle friend mc server running thats minus rule nolog stuff like isp router multicast itssubnet pinging shit everything anyone reading advice probably made terrible mistake somewhere dont copy ask actual security expert im xb case im going run node home networkhome lab environment im comfortable understandable im running hostingvps etc considered though often hostingvps ip blocked lot service including streaming plateforms also susceptible blocked andor monitored countriesorganizations intend censor speechopposition repression kinda would defeat point run node im planning use swag already use swag frontface stuff cloudflare proxy plan switching traefik already use internally ssl stuff isnt publicly presented could add layer auth fauth top using authelia eventually rmysteriumnetworkcommentssjqmiresidentialsecurityconcernskindstrangerdohwbwil planning thats indeed whole stack could solution would produce shell script standard lxc even baremetal bog standard debian would pull mysterium pihole suricata etc needed source automatize config asking input parameter needed like static ip subnetiprangecidr gateway use stack actual local network order make secure beginner friendly advertises saw setup waaaaaay simpler probably also way le informed situation dont care node internal security much touching anything turf used maliciously xb case thank insight suggestion youre giving volunteering help repo insight remarksconceptions someone widespread sparse understandingknowledge lot hole saw stuff seemed almost instinctively problematic conceptualize solution building whole stack let alone automating would completely securely tight plugplay kinda beyond skill see category code tinkerer actual coder security enthusiast expert indeed check repo probably try report eventually point issue see probably wont complete solution anything though said soon youre comfortable enough repo ill link top post edit eye probably people knowledgeable crafty looking forward read opinion yup well indeed opinion solution even insight part looking forward see roast firewall rule rmysteriumnetworkcommentssjqmiresidentialsecurityconcernskindstrangerdohwbzaz honest great job id add blocking malformed ip packet rate limit syn icmp packet showing much im expert actually never tried proxmoxs firewall ill try regarding traefik think way better stand nginx especially swag failban integrated fair found traefik bit easier play thats entierely personal flexible come adding removing service fly doesnt need reloads rebuilds hence choice internal ssl think failtoban loos bit importance im hiding cloudflares proxy caching filtering vps v isp honestly think still monitored case yeah isps monitored like vps residential address blocked datacenter ip country platform geoblock node thus still available wider audience access wider array service running vps think also im kinda serving end running node internet usage isps point view becomes indecipherable mess wide array profile language mixed together basically stopping building profile way vpn protect identity almost much using one xb wich dns used vpn client im puzzled would assume using dns configured machine since havent seen else missed custom dns option vpns code rmysteriumnetworkcommentssjqmiresidentialsecurityconcernskindstrangerdohwehrap im running mine lxc debian container available resource single core th gen processor mb ram session finished moment h gb transfered node didnt even touched half resource resource intensive yes better placed client sendreceive lot data gb earns almost much hour session ping also matter client ip doubt yes better use ip different region world neighbor grandma ultimately internet geolockslawscensorships rmysteriumnetworkcommentssojaqrbestwaytomaximisenetworknodeearningshwhjua likely either watching ultra hd torrenting passed gb bar moment rmysteriumnetworkcommentssnwzzbwellsomeoneshavingadownloadingspreeiseehwjr amount traffic well session still going th hour node indeed residential virtualized environment firewall applying outside container youre curious security posthttpswwwredditcomrmysteriumnetworkcommentssjqmiresidentialsecurityconcernskindstrangerdo configuration issue outside box quite bit discussion comment since im whitelist conscious may taking bit risk xb gb session moment im writing container still doesnt use resource still mib used memory rmysteriumnetworkcommentssnwzzbwellsomeoneshavingadownloadingspreeiseehwpqfi cant give straight answer previous long session hour long japan transferred mb dozen short session mb key point im gbps mbps connection low ping node selftest indicates full cone reachable possible docker container could achieve symmetric nat restricted cone surely due network host structured clearly allocated resource dont matter allocated single core th gen processor mb ram ram debian lxc container average use half total allocation whole h session cpu spike werent th wtdp cpu xb dont know attracted guess made stay stability throughput ping rmysteriumnetworkcommentssnwzzbwellsomeoneshavingadownloadingspreeiseehweiqdt well running myst bare metal indeed risky running container anything go wrong missconfigured give advice keep mind im security expert tinkerer im making mistake giving advice either give guideline idea taking raspberry pi example given little resource node us bit waste pi run node idea would mysterium node running docker segregated docker container could run pi also segregated network without going deep here recommendation would rasppi node install bogstandard raspbian install docker go docker container installation myst instead bare metal docker mean also easily set firewall rule container outside container mean anything go wrong within mysterium container logic shouldnt able bypass firewall rule touch host long unprivileged container bare minimum rule protect network would following assuming ip range aka gatewayrouter create network bridge docker let container ip docker network create macvlan subnet iprange gateway parenteth brdocker leave possibility take ip avoid possible conflict reduce one expend range xb create ipset represents local network minus gateway ipset create langw hashnet comment ipset add langw comment lan ip range ipset add langw nomatch comment gateway one represent ip node may ipset create mystip hashnet comment ipset add mystip comment mystip one ip lan want allow accessing node webui ipset create mystwebui hashnet ipset add mystwebui example computer lan using able reach node webui add needed following firewall rule would minimal security setup imo protect device network router node still allowing full connectivity dvpn port select webui access chosen device iptables input set matchset mystip dst set matchset langw src p tcp dport j accept iptables input set matchset mystip dst set matchset langw src j reject iptables input set matchset mystip dst p udp match multiport dports j accept iptables output set matchset mystip src set matchset langw dst j drop iptables output set matchset mystip src p tcp match multiport dports j drop iptables policy input drop sbiniptablessave etciptablesrulesv know ethx stuff could used trying keep setupagnostic simple setup change modification would require change ipset advise read bit iptables docker modify headache necessary one make sure node always start docker following extra parameter get ip seperate pi host network ease portforwarding docker run network brdocker cli container use docker cli raspberrypi xb havent done cant tell good go would take head went help starting point run lxc container proxmox instead even setup isnt perfect im sure rmysteriumnetworkcommentssnwzzbwellsomeoneshavingadownloadingspreeiseehwjc repeat im security expert anything tinkerer might wrong stuff may made mistake im seeing really reason made answer le giving instruction follow like giving ideaunderstanding trying achieve secure step imagine would take make happen using tool well documented recognized dont rasppi atm havent tried docker either went lxc container could test baremetal native install containerized environment control reduce risk monitor achieves essence concept containerouter firewall really better advice give look ask around either linux dedicated reddits iptablesipset docker curious dive documentationtutorials made people knowledgeable skilled rmysteriumnetworkcommentssnwzzbwellsomeoneshavingadownloadingspreeiseehwxmrz well two thing must created ipsets corresponding first ipset companion package iptables sure installed matchset two time matchset wait fucked synthax gim moment edit edited might still left error brainblank declare source destination properly matchsets rmysteriumnetworkcommentssnwzzbwellsomeoneshavingadownloadingspreeiseehwpkx\",\n          \"vet tech practice manager actually go hospital resume hand dont know write resume get online learn page le since previous vet experience motto youre lazy pound pavement youre lazy work vet medicine realize im old time changed able go visit hospital might see something person make realize particular clinic fit never reply someone inquiring phone show initiative least send nice email resume attached resume submitted call stop within week follow research hospital ton turnover thats red flag best luck\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 7
        }
      ],
      "source": [
        "# Importing necessary libraries for text preprocessing\n",
        "import re\n",
        "import nltk\n",
        "from nltk.corpus import stopwords\n",
        "from nltk.tokenize import word_tokenize\n",
        "from nltk.stem import WordNetLemmatizer\n",
        "\n",
        "# Download NLTK resources\n",
        "nltk.download('punkt')\n",
        "nltk.download('stopwords')\n",
        "nltk.download('wordnet')\n",
        "\n",
        "# Function for text preprocessing\n",
        "def preprocess_text(text):\n",
        "    # Check if the text is not NaN\n",
        "    if isinstance(text, str):\n",
        "        # Convert text to lowercase\n",
        "        text = text.lower()\n",
        "\n",
        "        # Remove special characters and punctuation\n",
        "        text = re.sub(r'[^a-zA-Z\\s]', '', text)\n",
        "\n",
        "        # Tokenize the text\n",
        "        tokens = word_tokenize(text)\n",
        "\n",
        "        # Remove stop words\n",
        "        stop_words = set(stopwords.words('english'))\n",
        "        tokens = [token for token in tokens if token not in stop_words]\n",
        "\n",
        "        # Lemmatization\n",
        "        lemmatizer = WordNetLemmatizer()\n",
        "        tokens = [lemmatizer.lemmatize(token) for token in tokens]\n",
        "\n",
        "        # Join tokens back into text\n",
        "        preprocessed_text = ' '.join(tokens)\n",
        "\n",
        "        return preprocessed_text\n",
        "    else:\n",
        "        return \"\"\n",
        "\n",
        "# Apply preprocessing to the 'comment' column\n",
        "df['clean_comment'] = df['comments'].apply(preprocess_text)\n",
        "\n",
        "# Display the preprocessed data\n",
        "df.head()\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 363
        },
        "id": "kF_548x3nkNL",
        "outputId": "c3cd6154-eeff-4e21-b0cf-38518485acea"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                               comments  \\\n",
              "1169  Clinical year is the biggest waste of time and...   \n",
              "5653                                                NaN   \n",
              "4422                                                NaN   \n",
              "2473      Thanks for this. There is so much negativity.   \n",
              "3088  I have a client that is elderly and tries her ...   \n",
              "8185                                                NaN   \n",
              "7601                                                NaN   \n",
              "7920                                                NaN   \n",
              "3820                                                NaN   \n",
              "2857  Very similar experience with uvc here. However...   \n",
              "\n",
              "                                          clean_comment  \n",
              "1169  clinical year biggest waste time money threate...  \n",
              "5653                                                     \n",
              "4422                                                     \n",
              "2473                             thanks much negativity  \n",
              "3088  client elderly try best tom cat invited home y...  \n",
              "8185                                                     \n",
              "7601                                                     \n",
              "7920                                                     \n",
              "3820                                                     \n",
              "2857  similar experience uvc however said anything c...  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-80678c02-03c1-4608-bb82-7ef5376c0358\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>comments</th>\n",
              "      <th>clean_comment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1169</th>\n",
              "      <td>Clinical year is the biggest waste of time and...</td>\n",
              "      <td>clinical year biggest waste time money threate...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5653</th>\n",
              "      <td>NaN</td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4422</th>\n",
              "      <td>NaN</td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2473</th>\n",
              "      <td>Thanks for this. There is so much negativity.</td>\n",
              "      <td>thanks much negativity</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3088</th>\n",
              "      <td>I have a client that is elderly and tries her ...</td>\n",
              "      <td>client elderly try best tom cat invited home y...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8185</th>\n",
              "      <td>NaN</td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7601</th>\n",
              "      <td>NaN</td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7920</th>\n",
              "      <td>NaN</td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3820</th>\n",
              "      <td>NaN</td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2857</th>\n",
              "      <td>Very similar experience with uvc here. However...</td>\n",
              "      <td>similar experience uvc however said anything c...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-80678c02-03c1-4608-bb82-7ef5376c0358')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-80678c02-03c1-4608-bb82-7ef5376c0358 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-80678c02-03c1-4608-bb82-7ef5376c0358');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-26f7bbdf-64ab-4b00-ae3c-eac3e04701de\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-26f7bbdf-64ab-4b00-ae3c-eac3e04701de')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-26f7bbdf-64ab-4b00-ae3c-eac3e04701de button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"sample_comments[['comments', 'clean_comment']]\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"comments\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Thanks for this. There is so much negativity.\",\n          \"Very similar experience with uvc here. However, they have not said anything about cutting salaries for vets - if they did something like that I\\u2019d 100% walk. We are in high demand, don\\u2019t stand for that nonsense.|It\\u2019s a sad trend in vet med for sure. Prioritize your mental health, we are stressed enough without worrying about our paychecks. Good luck!\",\n          \"Clinical year is the biggest waste of time and money. I was threatened to fail at UW if I followed my doctors advice after sustaining a concussion there. UW was so bad one of their interns committed suicide. Get out of 4th year and don\\u2019t look back. You you will more in practice and learning from others around you. Just do enough to pass and don\\u2019t look back|No it\\u2019s not|Where do you live?|Clinical year is the biggest waste of time and money. I was threatened to fail at UW if I followed my doctors advice after sustaining a concussion there. UW was so bad one of their interns committed suicide. Get out of 4th year and don\\u2019t look back. You you will more in practice and learning from others around you. Just do enough to pass and don\\u2019t look back|No it\\u2019s not|Where do you live?|Clinical year is the biggest waste of time and money. I was threatened to fail at UW if I followed my doctors advice after sustaining a concussion there. UW was so bad one of their interns committed suicide. Get out of 4th year and don\\u2019t look back. You you will more in practice and learning from others around you. Just do enough to pass and don\\u2019t look back|No it\\u2019s not|Where do you live?|Clinical year is the biggest waste of time and money. I was threatened to fail at UW if I followed my doctors advice after sustaining a concussion there. UW was so bad one of their interns committed suicide. Get out of 4th year and don\\u2019t look back. You you will more in practice and learning from others around you. Just do enough to pass and don\\u2019t look back|No it\\u2019s not|Where do you live?|Clinical year is the biggest waste of time and money. I was threatened to fail at UW if I followed my doctors advice after sustaining a concussion there. UW was so bad one of their interns committed suicide. Get out of 4th year and don\\u2019t look back. You you will more in practice and learning from others around you. Just do enough to pass and don\\u2019t look back|No it\\u2019s not|Where do you live?|Clinical year is the biggest waste of time and money. I was threatened to fail at UW if I followed my doctors advice after sustaining a concussion there. UW was so bad one of their interns committed suicide. Get out of 4th year and don\\u2019t look back. You you will more in practice and learning from others around you. Just do enough to pass and don\\u2019t look back|No it\\u2019s not|Where do you live?\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"clean_comment\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"\",\n          \"similar experience uvc however said anything cutting salary vet something like id walk high demand dont stand nonsenseits sad trend vet med sure prioritize mental health stressed enough without worrying paycheck good luck\",\n          \"thanks much negativity\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 8
        }
      ],
      "source": [
        "# Display a sample of comments for labeling\n",
        "sample_comments = df.sample(10)\n",
        "sample_comments[['comments', 'clean_comment']]\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 676
        },
        "id": "c02Aeywxpu2U",
        "outputId": "d7c180e8-807b-45ad-cc5f-bab2cffeccfd"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                               comments  \\\n",
              "1169  Clinical year is the biggest waste of time and...   \n",
              "5653                                                NaN   \n",
              "4422                                                NaN   \n",
              "2473      Thanks for this. There is so much negativity.   \n",
              "3088  I have a client that is elderly and tries her ...   \n",
              "8185                                                NaN   \n",
              "7601                                                NaN   \n",
              "7920                                                NaN   \n",
              "3820                                                NaN   \n",
              "2857  Very similar experience with uvc here. However...   \n",
              "0                                                   NaN   \n",
              "1                                                   NaN   \n",
              "2                                                   NaN   \n",
              "3                                                   NaN   \n",
              "4                                                   NaN   \n",
              "5                                                   NaN   \n",
              "6                                                   NaN   \n",
              "7                                                   NaN   \n",
              "8                                                   NaN   \n",
              "9                                                   NaN   \n",
              "\n",
              "                                          clean_comment           label  \n",
              "1169  clinical year biggest waste time money threate...             NaN  \n",
              "5653                                                                NaN  \n",
              "4422                                                                NaN  \n",
              "2473                             thanks much negativity             NaN  \n",
              "3088  client elderly try best tom cat invited home y...             NaN  \n",
              "8185                                                                NaN  \n",
              "7601                                                                NaN  \n",
              "7920                                                                NaN  \n",
              "3820                                                                NaN  \n",
              "2857  similar experience uvc however said anything c...             NaN  \n",
              "0                                                   NaN           Other  \n",
              "1                                                   NaN           Other  \n",
              "2                                                   NaN           Other  \n",
              "3                                                   NaN  Medical Doctor  \n",
              "4                                                   NaN    Veterinarian  \n",
              "5                                                   NaN           Other  \n",
              "6                                                   NaN           Other  \n",
              "7                                                   NaN           Other  \n",
              "8                                                   NaN           Other  \n",
              "9                                                   NaN  Medical Doctor  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5a746154-a8db-4d9e-951f-a1f4e5d6ba06\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>comments</th>\n",
              "      <th>clean_comment</th>\n",
              "      <th>label</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1169</th>\n",
              "      <td>Clinical year is the biggest waste of time and...</td>\n",
              "      <td>clinical year biggest waste time money threate...</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5653</th>\n",
              "      <td>NaN</td>\n",
              "      <td></td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4422</th>\n",
              "      <td>NaN</td>\n",
              "      <td></td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2473</th>\n",
              "      <td>Thanks for this. There is so much negativity.</td>\n",
              "      <td>thanks much negativity</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3088</th>\n",
              "      <td>I have a client that is elderly and tries her ...</td>\n",
              "      <td>client elderly try best tom cat invited home y...</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8185</th>\n",
              "      <td>NaN</td>\n",
              "      <td></td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7601</th>\n",
              "      <td>NaN</td>\n",
              "      <td></td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7920</th>\n",
              "      <td>NaN</td>\n",
              "      <td></td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3820</th>\n",
              "      <td>NaN</td>\n",
              "      <td></td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2857</th>\n",
              "      <td>Very similar experience with uvc here. However...</td>\n",
              "      <td>similar experience uvc however said anything c...</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Other</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Other</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Other</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Medical Doctor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Veterinarian</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Other</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Other</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Other</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Other</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Medical Doctor</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5a746154-a8db-4d9e-951f-a1f4e5d6ba06')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5a746154-a8db-4d9e-951f-a1f4e5d6ba06 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5a746154-a8db-4d9e-951f-a1f4e5d6ba06');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-74474e44-d156-40e1-b86f-8f3b4d4a0068\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-74474e44-d156-40e1-b86f-8f3b4d4a0068')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-74474e44-d156-40e1-b86f-8f3b4d4a0068 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"sample_comments[['comments', 'clean_comment', 'label']]\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"comments\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Thanks for this. There is so much negativity.\",\n          \"Very similar experience with uvc here. However, they have not said anything about cutting salaries for vets - if they did something like that I\\u2019d 100% walk. We are in high demand, don\\u2019t stand for that nonsense.|It\\u2019s a sad trend in vet med for sure. Prioritize your mental health, we are stressed enough without worrying about our paychecks. Good luck!\",\n          \"Clinical year is the biggest waste of time and money. I was threatened to fail at UW if I followed my doctors advice after sustaining a concussion there. UW was so bad one of their interns committed suicide. Get out of 4th year and don\\u2019t look back. You you will more in practice and learning from others around you. Just do enough to pass and don\\u2019t look back|No it\\u2019s not|Where do you live?|Clinical year is the biggest waste of time and money. I was threatened to fail at UW if I followed my doctors advice after sustaining a concussion there. UW was so bad one of their interns committed suicide. Get out of 4th year and don\\u2019t look back. You you will more in practice and learning from others around you. Just do enough to pass and don\\u2019t look back|No it\\u2019s not|Where do you live?|Clinical year is the biggest waste of time and money. I was threatened to fail at UW if I followed my doctors advice after sustaining a concussion there. UW was so bad one of their interns committed suicide. Get out of 4th year and don\\u2019t look back. You you will more in practice and learning from others around you. Just do enough to pass and don\\u2019t look back|No it\\u2019s not|Where do you live?|Clinical year is the biggest waste of time and money. I was threatened to fail at UW if I followed my doctors advice after sustaining a concussion there. UW was so bad one of their interns committed suicide. Get out of 4th year and don\\u2019t look back. You you will more in practice and learning from others around you. Just do enough to pass and don\\u2019t look back|No it\\u2019s not|Where do you live?|Clinical year is the biggest waste of time and money. I was threatened to fail at UW if I followed my doctors advice after sustaining a concussion there. UW was so bad one of their interns committed suicide. Get out of 4th year and don\\u2019t look back. You you will more in practice and learning from others around you. Just do enough to pass and don\\u2019t look back|No it\\u2019s not|Where do you live?|Clinical year is the biggest waste of time and money. I was threatened to fail at UW if I followed my doctors advice after sustaining a concussion there. UW was so bad one of their interns committed suicide. Get out of 4th year and don\\u2019t look back. You you will more in practice and learning from others around you. Just do enough to pass and don\\u2019t look back|No it\\u2019s not|Where do you live?\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"clean_comment\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"\",\n          \"similar experience uvc however said anything cutting salary vet something like id walk high demand dont stand nonsenseits sad trend vet med sure prioritize mental health stressed enough without worrying paycheck good luck\",\n          \"thanks much negativity\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Other\",\n          \"Medical Doctor\",\n          \"Veterinarian\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 9
        }
      ],
      "source": [
        "# Add labels to the sample comments\n",
        "sample_comments.loc[0, 'label'] = 'Other'\n",
        "sample_comments.loc[1, 'label'] = 'Other'\n",
        "sample_comments.loc[2, 'label'] = 'Other'\n",
        "sample_comments.loc[3, 'label'] = 'Medical Doctor'\n",
        "sample_comments.loc[4, 'label'] = 'Veterinarian'\n",
        "sample_comments.loc[5, 'label'] = 'Other'\n",
        "sample_comments.loc[6, 'label'] = 'Other'\n",
        "sample_comments.loc[7, 'label'] = 'Other'\n",
        "sample_comments.loc[8, 'label'] = 'Other'\n",
        "sample_comments.loc[9, 'label'] = 'Medical Doctor'\n",
        "\n",
        "# Display the labeled sample comments\n",
        "sample_comments[['comments', 'clean_comment', 'label']]\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 11,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WvKZulx5qjue",
        "outputId": "91a6ff67-55dd-44ef-acca-8d9addd28f11"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Unique Labels: ['Female, Kentucky.  4 years out. Work equine only private practice. Base salary $85k plus bonuses/production which was $20k 2023. 6 days a week Jan-June/July then variable in the off season. No limit on PTO - took ~5 weeks last year. One paid conference a year (registration/travel/ 1/2 hotel/ transportation) or online CE program. All licensures & professional group fees covered. Cell phone allowance and mileage reimbursement.|Female, Kentucky.  4 years out. Work equine only private practice. Base salary $85k plus bonuses/production which was $20k 2023. 6 days a week Jan-June/July then variable in the off season. No limit on PTO - took ~5 weeks last year. One paid conference a year (registration/travel/ 1/2 hotel/ transportation) or online CE program. All licensures & professional group fees covered. Cell phone allowance and mileage reimbursement.|Female, Kentucky.  4 years out. Work equine only private practice. Base salary $85k plus bonuses/production which was $20k 2023. 6 days a week Jan-June/July then variable in the off season. No limit on PTO - took ~5 weeks last year. One paid conference a year (registration/travel/ 1/2 hotel/ transportation) or online CE program. All licensures & professional group fees covered. Cell phone allowance and mileage reimbursement.|Female, Kentucky.  4 years out. Work equine only private practice. Base salary $85k plus bonuses/production which was $20k 2023. 6 days a week Jan-June/July then variable in the off season. No limit on PTO - took ~5 weeks last year. One paid conference a year (registration/travel/ 1/2 hotel/ transportation) or online CE program. All licensures & professional group fees covered. Cell phone allowance and mileage reimbursement.|Female, Kentucky.  4 years out. Work equine only private practice. Base salary $85k plus bonuses/production which was $20k 2023. 6 days a week Jan-June/July then variable in the off season. No limit on PTO - took ~5 weeks last year. One paid conference a year (registration/travel/ 1/2 hotel/ transportation) or online CE program. All licensures & professional group fees covered. Cell phone allowance and mileage reimbursement.|Female, Kentucky.  4 years out. Work equine only private practice. Base salary $85k plus bonuses/production which was $20k 2023. 6 days a week Jan-June/July then variable in the off season. No limit on PTO - took ~5 weeks last year. One paid conference a year (registration/travel/ 1/2 hotel/ transportation) or online CE program. All licensures & professional group fees covered. Cell phone allowance and mileage reimbursement.|Female, Kentucky.  4 years out. Work equine only private practice. Base salary $85k plus bonuses/production which was $20k 2023. 6 days a week Jan-June/July then variable in the off season. No limit on PTO - took ~5 weeks last year. One paid conference a year (registration/travel/ 1/2 hotel/ transportation) or online CE program. All licensures & professional group fees covered. Cell phone allowance and mileage reimbursement.|Female, Kentucky.  4 years out. Work equine only private practice. Base salary $85k plus bonuses/production which was $20k 2023. 6 days a week Jan-June/July then variable in the off season. No limit on PTO - took ~5 weeks last year. One paid conference a year (registration/travel/ 1/2 hotel/ transportation) or online CE program. All licensures & professional group fees covered. Cell phone allowance and mileage reimbursement.|Female, Kentucky.  4 years out. Work equine only private practice. Base salary $85k plus bonuses/production which was $20k 2023. 6 days a week Jan-June/July then variable in the off season. No limit on PTO - took ~5 weeks last year. One paid conference a year (registration/travel/ 1/2 hotel/ transportation) or online CE program. All licensures & professional group fees covered. Cell phone allowance and mileage reimbursement.|Female, Kentucky.  4 years out. Work equine only private practice. Base salary $85k plus bonuses/production which was $20k 2023. 6 days a week Jan-June/July then variable in the off season. No limit on PTO - took ~5 weeks last year. One paid conference a year (registration/travel/ 1/2 hotel/ transportation) or online CE program. All licensures & professional group fees covered. Cell phone allowance and mileage reimbursement.|Female, Kentucky.  4 years out. Work equine only private practice. Base salary $85k plus bonuses/production which was $20k 2023. 6 days a week Jan-June/July then variable in the off season. No limit on PTO - took ~5 weeks last year. One paid conference a year (registration/travel/ 1/2 hotel/ transportation) or online CE program. All licensures & professional group fees covered. Cell phone allowance and mileage reimbursement.|Female, Kentucky.  4 years out. Work equine only private practice. Base salary $85k plus bonuses/production which was $20k 2023. 6 days a week Jan-June/July then variable in the off season. No limit on PTO - took ~5 weeks last year. One paid conference a year (registration/travel/ 1/2 hotel/ transportation) or online CE program. All licensures & professional group fees covered. Cell phone allowance and mileage reimbursement.|Female, Kentucky.  4 years out. Work equine only private practice. Base salary $85k plus bonuses/production which was $20k 2023. 6 days a week Jan-June/July then variable in the off season. No limit on PTO - took ~5 weeks last year. One paid conference a year (registration/travel/ 1/2 hotel/ transportation) or online CE program. All licensures & professional group fees covered. Cell phone allowance and mileage reimbursement.|Female, Kentucky.  4 years out. Work equine only private practice. Base salary $85k plus bonuses/production which was $20k 2023. 6 days a week Jan-June/July then variable in the off season. No limit on PTO - took ~5 weeks last year. One paid conference a year (registration/travel/ 1/2 hotel/ transportation) or online CE program. All licensures & professional group fees covered. Cell phone allowance and mileage reimbursement.|Female, Kentucky.  4 years out. Work equine only private practice. Base salary $85k plus bonuses/production which was $20k 2023. 6 days a week Jan-June/July then variable in the off season. No limit on PTO - took ~5 weeks last year. One paid conference a year (registration/travel/ 1/2 hotel/ transportation) or online CE program. All licensures & professional group fees covered. Cell phone allowance and mileage reimbursement.|Female, Kentucky.  4 years out. Work equine only private practice. Base salary $85k plus bonuses/production which was $20k 2023. 6 days a week Jan-June/July then variable in the off season. No limit on PTO - took ~5 weeks last year. One paid conference a year (registration/travel/ 1/2 hotel/ transportation) or online CE program. All licensures & professional group fees covered. Cell phone allowance and mileage reimbursement.'\n",
            " 'As a woman of reproductive age, fuck Texas|As a woman of reproductive age, fuck Texas|As a woman of reproductive age, fuck Texas|As a woman of reproductive age, fuck Texas|As a woman of reproductive age, fuck Texas|As a woman of reproductive age, fuck Texas|As a woman of reproductive age, fuck Texas|As a woman of reproductive age, fuck Texas|As a woman of reproductive age, fuck Texas|As a woman of reproductive age, fuck Texas|As a woman of reproductive age, fuck Texas|As a woman of reproductive age, fuck Texas|As a woman of reproductive age, fuck Texas|As a woman of reproductive age, fuck Texas|As a woman of reproductive age, fuck Texas|As a woman of reproductive age, fuck Texas'\n",
            " 'what makes you want to become a vet?|what makes you want to become a vet?|what makes you want to become a vet?|what makes you want to become a vet?|what makes you want to become a vet?|what makes you want to become a vet?|what makes you want to become a vet?|what makes you want to become a vet?|what makes you want to become a vet?|what makes you want to become a vet?|what makes you want to become a vet?|what makes you want to become a vet?|what makes you want to become a vet?|what makes you want to become a vet?|what makes you want to become a vet?|what makes you want to become a vet?'\n",
            " ...\n",
            " \"Same! Helps massively. Errors can still occur, but it's signficantly less likely. When I don't have a 2nd person to confirm, I take a photo of the medication's original bottle next to the script so I can go back and confirm what was filled if I question myself later (it also just naturally slows you down to think about what you're doing)\"\n",
            " 'It’s no different than undergrad. School is school.|Their mentor ship is assigning you someone from another practice or maybe even another town to converse with. The “owners” of those clinics may mentor you in person also.|You just take a job knowing you will make mistakes it’s part of it. But it’s only a mistake if you do not learn from it.  It’s called practice for a reason. A lot of people make this job out to be something it’s not. Just go to work. Practice, learn, and do your best.|The field is changing and will change for the worse I’m afraid.|Do your best. You will make mistakes. Learn from them and move on with life. That’s the point of it I think. Learn and grow.|I was offered something similar. Essentially in my mind this is what these offers boil down to with these corporates. You are “5%” owner but perform 100% of owner duties day in and day out. Need to hire someone, inventory needs ordered, staffing disputes, angry clients, practicing medicine? You will be in charge of all of this basically running the practice 100%. And only taking home “5%” of the profit. While your corporate partners keep the other 95%.  I ultimately decided not to go into “owner ship” with these corporates.  Especially since they pay good associates so well.|One of my classmates failed the first time. Did not study for the second one and passed no problem. It’s a silly test that doesn’t really gauge how you will be as a veterinarian.|No matter what the schools say, be well rounded etc, they really only care about gpa. A 3.2 is low you need to boost it up.|Loving animals is not a reason to become a veterinarian.|Rough seas make good sailors. It’s all part of learning. Other than perfecting your knots I’d recommend strengthening your hands. Pull ups etc help in a big way.|I’m not sure I’ve met a practice owner who I would describe as a “happy person”|Whenever you decide it’s time, then it’s time.|I earn production on everything I touch from preventatives to vaccines to surgery’s etc. it’s a great way to be paid. The harder you work, the more you see, the more you make.|Focus on practicing good medicine and surgery AND being efficient. The production money will come if you do that.| Hard no|5am CrossFit. It’s the first thing I do every workday.|Just got to do what’s best for you and move on. Life is short.'\n",
            " nan]\n"
          ]
        }
      ],
      "source": [
        "# Check unique labels in the dataset\n",
        "unique_labels = df['comments'].unique()\n",
        "print(\"Unique Labels:\", unique_labels)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 676
        },
        "id": "xbcsbXbtqvev",
        "outputId": "671f816b-ed30-4193-9b90-c3035d446c28"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                               comments  \\\n",
              "1169  Clinical year is the biggest waste of time and...   \n",
              "5653                                                NaN   \n",
              "4422                                                NaN   \n",
              "2473      Thanks for this. There is so much negativity.   \n",
              "3088  I have a client that is elderly and tries her ...   \n",
              "8185                                                NaN   \n",
              "7601                                                NaN   \n",
              "7920                                                NaN   \n",
              "3820                                                NaN   \n",
              "2857  Very similar experience with uvc here. However...   \n",
              "0                                                   NaN   \n",
              "1                                                   NaN   \n",
              "2                                                   NaN   \n",
              "3                                                   NaN   \n",
              "4                                                   NaN   \n",
              "5                                                   NaN   \n",
              "6                                                   NaN   \n",
              "7                                                   NaN   \n",
              "8                                                   NaN   \n",
              "9                                                   NaN   \n",
              "\n",
              "                                          clean_comment           label  \n",
              "1169  clinical year biggest waste time money threate...             NaN  \n",
              "5653                                                                NaN  \n",
              "4422                                                                NaN  \n",
              "2473                             thanks much negativity             NaN  \n",
              "3088  client elderly try best tom cat invited home y...             NaN  \n",
              "8185                                                                NaN  \n",
              "7601                                                                NaN  \n",
              "7920                                                                NaN  \n",
              "3820                                                                NaN  \n",
              "2857  similar experience uvc however said anything c...             NaN  \n",
              "0                                                   NaN           Other  \n",
              "1                                                   NaN           Other  \n",
              "2                                                   NaN           Other  \n",
              "3                                                   NaN  Medical Doctor  \n",
              "4                                                   NaN    Veterinarian  \n",
              "5                                                   NaN           Other  \n",
              "6                                                   NaN           Other  \n",
              "7                                                   NaN           Other  \n",
              "8                                                   NaN           Other  \n",
              "9                                                   NaN  Medical Doctor  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5dc6add7-96ff-4738-8feb-bc258b013317\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>comments</th>\n",
              "      <th>clean_comment</th>\n",
              "      <th>label</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1169</th>\n",
              "      <td>Clinical year is the biggest waste of time and...</td>\n",
              "      <td>clinical year biggest waste time money threate...</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5653</th>\n",
              "      <td>NaN</td>\n",
              "      <td></td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4422</th>\n",
              "      <td>NaN</td>\n",
              "      <td></td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2473</th>\n",
              "      <td>Thanks for this. There is so much negativity.</td>\n",
              "      <td>thanks much negativity</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3088</th>\n",
              "      <td>I have a client that is elderly and tries her ...</td>\n",
              "      <td>client elderly try best tom cat invited home y...</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8185</th>\n",
              "      <td>NaN</td>\n",
              "      <td></td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7601</th>\n",
              "      <td>NaN</td>\n",
              "      <td></td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7920</th>\n",
              "      <td>NaN</td>\n",
              "      <td></td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3820</th>\n",
              "      <td>NaN</td>\n",
              "      <td></td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2857</th>\n",
              "      <td>Very similar experience with uvc here. However...</td>\n",
              "      <td>similar experience uvc however said anything c...</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Other</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Other</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Other</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Medical Doctor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Veterinarian</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Other</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Other</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Other</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Other</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Medical Doctor</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5dc6add7-96ff-4738-8feb-bc258b013317')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5dc6add7-96ff-4738-8feb-bc258b013317 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5dc6add7-96ff-4738-8feb-bc258b013317');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-45b26fbb-9ed7-484e-8e44-04c37e297f96\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-45b26fbb-9ed7-484e-8e44-04c37e297f96')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-45b26fbb-9ed7-484e-8e44-04c37e297f96 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"sample_comments[['comments', 'clean_comment', 'label']]\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"comments\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Thanks for this. There is so much negativity.\",\n          \"Very similar experience with uvc here. However, they have not said anything about cutting salaries for vets - if they did something like that I\\u2019d 100% walk. We are in high demand, don\\u2019t stand for that nonsense.|It\\u2019s a sad trend in vet med for sure. Prioritize your mental health, we are stressed enough without worrying about our paychecks. Good luck!\",\n          \"Clinical year is the biggest waste of time and money. I was threatened to fail at UW if I followed my doctors advice after sustaining a concussion there. UW was so bad one of their interns committed suicide. Get out of 4th year and don\\u2019t look back. You you will more in practice and learning from others around you. Just do enough to pass and don\\u2019t look back|No it\\u2019s not|Where do you live?|Clinical year is the biggest waste of time and money. I was threatened to fail at UW if I followed my doctors advice after sustaining a concussion there. UW was so bad one of their interns committed suicide. Get out of 4th year and don\\u2019t look back. You you will more in practice and learning from others around you. Just do enough to pass and don\\u2019t look back|No it\\u2019s not|Where do you live?|Clinical year is the biggest waste of time and money. I was threatened to fail at UW if I followed my doctors advice after sustaining a concussion there. UW was so bad one of their interns committed suicide. Get out of 4th year and don\\u2019t look back. You you will more in practice and learning from others around you. Just do enough to pass and don\\u2019t look back|No it\\u2019s not|Where do you live?|Clinical year is the biggest waste of time and money. I was threatened to fail at UW if I followed my doctors advice after sustaining a concussion there. UW was so bad one of their interns committed suicide. Get out of 4th year and don\\u2019t look back. You you will more in practice and learning from others around you. Just do enough to pass and don\\u2019t look back|No it\\u2019s not|Where do you live?|Clinical year is the biggest waste of time and money. I was threatened to fail at UW if I followed my doctors advice after sustaining a concussion there. UW was so bad one of their interns committed suicide. Get out of 4th year and don\\u2019t look back. You you will more in practice and learning from others around you. Just do enough to pass and don\\u2019t look back|No it\\u2019s not|Where do you live?|Clinical year is the biggest waste of time and money. I was threatened to fail at UW if I followed my doctors advice after sustaining a concussion there. UW was so bad one of their interns committed suicide. Get out of 4th year and don\\u2019t look back. You you will more in practice and learning from others around you. Just do enough to pass and don\\u2019t look back|No it\\u2019s not|Where do you live?\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"clean_comment\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"\",\n          \"similar experience uvc however said anything cutting salary vet something like id walk high demand dont stand nonsenseits sad trend vet med sure prioritize mental health stressed enough without worrying paycheck good luck\",\n          \"thanks much negativity\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Other\",\n          \"Medical Doctor\",\n          \"Veterinarian\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 12
        }
      ],
      "source": [
        "# Display the labeled sample comments\n",
        "sample_comments[['comments', 'clean_comment', 'label']]\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 13,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "luHMAyZ6rOuq",
        "outputId": "2ed93299-38b7-46ea-fce9-5c13de8af1cf"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                               comments  \\\n",
              "0     Female, Kentucky.  4 years out. Work equine on...   \n",
              "1     As a woman of reproductive age, fuck Texas|As ...   \n",
              "2     what makes you want to become a vet?|what make...   \n",
              "3     I see of course there are changing variables, ...   \n",
              "4     I have 412+ and faced issues because wireguard...   \n",
              "...                                                 ...   \n",
              "8254                                                NaN   \n",
              "8255                                                NaN   \n",
              "8256                                                NaN   \n",
              "8257                                                NaN   \n",
              "8258                                                NaN   \n",
              "\n",
              "                                          clean_comment           label  \n",
              "0     female kentucky year work equine private pract...           Other  \n",
              "1     woman reproductive age fuck texasas woman repr...           Other  \n",
              "2     make want become vetwhat make want become vetw...           Other  \n",
              "3     see course changing variable dimension change ...  Medical Doctor  \n",
              "4     faced issue wireguard natively supported hence...    Veterinarian  \n",
              "...                                                 ...             ...  \n",
              "8254                                                                NaN  \n",
              "8255                                                                NaN  \n",
              "8256                                                                NaN  \n",
              "8257                                                                NaN  \n",
              "8258                                                                NaN  \n",
              "\n",
              "[11535 rows x 3 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b7e971c3-e956-4f22-9183-2f0ac47bbc24\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>comments</th>\n",
              "      <th>clean_comment</th>\n",
              "      <th>label</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Female, Kentucky.  4 years out. Work equine on...</td>\n",
              "      <td>female kentucky year work equine private pract...</td>\n",
              "      <td>Other</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>As a woman of reproductive age, fuck Texas|As ...</td>\n",
              "      <td>woman reproductive age fuck texasas woman repr...</td>\n",
              "      <td>Other</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>what makes you want to become a vet?|what make...</td>\n",
              "      <td>make want become vetwhat make want become vetw...</td>\n",
              "      <td>Other</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>I see of course there are changing variables, ...</td>\n",
              "      <td>see course changing variable dimension change ...</td>\n",
              "      <td>Medical Doctor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>I have 412+ and faced issues because wireguard...</td>\n",
              "      <td>faced issue wireguard natively supported hence...</td>\n",
              "      <td>Veterinarian</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8254</th>\n",
              "      <td>NaN</td>\n",
              "      <td></td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8255</th>\n",
              "      <td>NaN</td>\n",
              "      <td></td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8256</th>\n",
              "      <td>NaN</td>\n",
              "      <td></td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8257</th>\n",
              "      <td>NaN</td>\n",
              "      <td></td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8258</th>\n",
              "      <td>NaN</td>\n",
              "      <td></td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>11535 rows × 3 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b7e971c3-e956-4f22-9183-2f0ac47bbc24')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b7e971c3-e956-4f22-9183-2f0ac47bbc24 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b7e971c3-e956-4f22-9183-2f0ac47bbc24');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1dc6fc3c-a55a-4a6b-a67e-4d626922a20b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1dc6fc3c-a55a-4a6b-a67e-4d626922a20b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1dc6fc3c-a55a-4a6b-a67e-4d626922a20b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df[['comments', 'clean_comment', 'label']]\",\n  \"rows\": 11535,\n  \"fields\": [\n    {\n      \"column\": \"comments\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3275,\n        \"samples\": [\n          \"Definitely! I graduated May 2023 and I look things up all the time, multiple times per day!\",\n          \"I'm a med student and I'm so sorry that that's your experience with doctors. I have the utmost respect for vets and have never equated human medicine to animal medicine. Granted, I've never brought up that I'm in the medical field unless someone asks, so I'd hope you have nicer clients in the medical field who are more low-key|I'm a med student and I'm so sorry that that's your experience with doctors. I have the utmost respect for vets and have never equated human medicine to animal medicine. Granted, I've never brought up that I'm in the medical field unless someone asks, so I'd hope you have nicer clients in the medical field who are more low-key|I'm a med student and I'm so sorry that that's your experience with doctors. I have the utmost respect for vets and have never equated human medicine to animal medicine. Granted, I've never brought up that I'm in the medical field unless someone asks, so I'd hope you have nicer clients in the medical field who are more low-key|I'm a med student and I'm so sorry that that's your experience with doctors. I have the utmost respect for vets and have never equated human medicine to animal medicine. Granted, I've never brought up that I'm in the medical field unless someone asks, so I'd hope you have nicer clients in the medical field who are more low-key|I'm a med student and I'm so sorry that that's your experience with doctors. I have the utmost respect for vets and have never equated human medicine to animal medicine. Granted, I've never brought up that I'm in the medical field unless someone asks, so I'd hope you have nicer clients in the medical field who are more low-key|I'm a med student and I'm so sorry that that's your experience with doctors. I have the utmost respect for vets and have never equated human medicine to animal medicine. Granted, I've never brought up that I'm in the medical field unless someone asks, so I'd hope you have nicer clients in the medical field who are more low-key\",\n          \"Was averaging 10 and 13 MYST/day prior to mainnet. After three days of mainnet total about .5 MYST and the other node nothing.  Not worth bothering for me anymore until something changes ---> /r/MysteriumNetwork/comments/r4dqtw/no_real_connections_after_upgrading_to_main_net/hmra4rk/\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"clean_comment\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3274,\n        \"samples\": [\n          \"reason run node xb xb p would great umystteam took look thishttpswwwredditcomrmysteriumnetworkcommentsswxddmakingrunningamysteriumnodelegalandsafein though concern node runnersyeah verified partner traffic basically sadly corporatish talk say vouche traffic anything go still wrong supposed entrust elusive unnamed validity checker entity come court room plead case wouldnt bet legal defense operator dvpn network exact reason wanted part network independence ownership one data privacy would choose way able vouche traffic mean defend case legal trouble thats big one whats worth decentralized vpn node runner would rely centralized authority back legal safetytwo thing thats one person one country saying twas run node without log hand worth nothing french authority example one guy isnt really pertinent torrenting kind least serious thing could concerned legally think already gave example would prompt authority anywhere give fuck argument twas run node dont mean prove someone el nodeui log however arent detailed yeah confirm protected french law abovementioned detail log worth nothing proof good enough assume may innocent whether judge like face coffee morning xb government pretty strict thing shut internet infraction yup even though kinda slow hadopi went many change wonky system even technically fair amount reason receive notice never receive short enough period first still valid counting x counter xb also assume mysterium whitelisted traffic benign exactly part point reason run dvpn rely isps centralized vpn provider willingness screw u data monitoring selling running dvpn node decentralized vpn node exact reason could rely centralized committeedeciding entity validate ok run connection could validation ever prevent validated party missbehave said centralized validation body would ever care able plea node runner innocence infraction committed validated partnersokay great multiple people still case one single country jurisdiction still solely copyright issue yes know whitelisting basically excludes nonmysterium approved traffic basically excludes private user randos together basically defeat reason im running node give wider le censored internet access people individual entity organizationssame think around session benin previous biggest client hgb japanese ipit seems like ping uptimelatency netherland bigger community dvpn clientsfor week running node keep going rate every week big client like fucking offset powerdraw whole rack mysteriumfrench residential ip dont mind answering enough old comment french speaking stuff happening france im already countrydoxedhttpswwwredditcomrmysteriumnetworkcommentssuacdzcommenthxaexcutmsourceshareutmmediumwebxcontextthis reason run node xb xb p would great umystteam took look thishttpswwwredditcomrmysteriumnetworkcommentsswxddmakingrunningamysteriumnodelegalandsafein though concern node runnersyeah verified partner traffic basically sadly corporatish talk say vouche traffic anything go still wrong supposed entrust elusive unnamed validity checker entity come court room plead case wouldnt bet legal defense operator dvpn network exact reason wanted part network independence ownership one data privacy would choose way able vouche traffic mean defend case legal trouble thats big one whats worth decentralized vpn node runner would rely centralized authority back legal safetytwo thing thats one person one country saying twas run node without log hand worth nothing french authority example one guy isnt really pertinent torrenting kind least serious thing could concerned legally think already gave example would prompt authority anywhere give fuck argument twas run node dont mean prove someone el nodeui log however arent detailed yeah confirm protected french law abovementioned detail log worth nothing proof good enough assume may innocent whether judge like face coffee morning xb government pretty strict thing shut internet infraction yup even though kinda slow hadopi went many change wonky system even technically fair amount reason receive notice never receive short enough period first still valid counting x counter xb also assume mysterium whitelisted traffic benign exactly part point reason run dvpn rely isps centralized vpn provider willingness screw u data monitoring selling running dvpn node decentralized vpn node exact reason could rely centralized committeedeciding entity validate ok run connection could validation ever prevent validated party missbehave said centralized validation body would ever care able plea node runner innocence infraction committed validated partnersokay great multiple people still case one single country jurisdiction still solely copyright issue yes know whitelisting basically excludes nonmysterium approved traffic basically excludes private user randos together basically defeat reason im running node give wider le censored internet access people individual entity organizationssame think around session benin previous biggest client hgb japanese ipit seems like ping uptimelatency netherland bigger community dvpn clientsfor week running node keep going rate every week big client like fucking offset powerdraw whole rack mysteriumfrench residential ip dont mind answering enough old comment french speaking stuff happening france im already countrydoxedhttpswwwredditcomrmysteriumnetworkcommentssuacdzcommenthxaexcutmsourceshareutmmediumwebxcontextthis reason run node xb xb p would great umystteam took look thishttpswwwredditcomrmysteriumnetworkcommentsswxddmakingrunningamysteriumnodelegalandsafein though concern node runnersyeah verified partner traffic basically sadly corporatish talk say vouche traffic anything go still wrong supposed entrust elusive unnamed validity checker entity come court room plead case wouldnt bet legal defense operator dvpn network exact reason wanted part network independence ownership one data privacy would choose way able vouche traffic mean defend case legal trouble thats big one whats worth decentralized vpn node runner would rely centralized authority back legal safetytwo thing thats one person one country saying twas run node without log hand worth nothing french authority example one guy isnt really pertinent torrenting kind least serious thing could concerned legally think already gave example would prompt authority anywhere give fuck argument twas run node dont mean prove someone el nodeui log however arent detailed yeah confirm protected french law abovementioned detail log worth nothing proof good enough assume may innocent whether judge like face coffee morning xb government pretty strict thing shut internet infraction yup even though kinda slow hadopi went many change wonky system even technically fair amount reason receive notice never receive short enough period first still valid counting x counter xb also assume mysterium whitelisted traffic benign exactly part point reason run dvpn rely isps centralized vpn provider willingness screw u data monitoring selling running dvpn node decentralized vpn node exact reason could rely centralized committeedeciding entity validate ok run connection could validation ever prevent validated party missbehave said centralized validation body would ever care able plea node runner innocence infraction committed validated partnersokay great multiple people still case one single country jurisdiction still solely copyright issue yes know whitelisting basically excludes nonmysterium approved traffic basically excludes private user randos together basically defeat reason im running node give wider le censored internet access people individual entity organizationssame think around session benin previous biggest client hgb japanese ipit seems like ping uptimelatency netherland bigger community dvpn clientsfor week running node keep going rate every week big client like fucking offset powerdraw whole rack mysteriumfrench residential ip dont mind answering enough old comment french speaking stuff happening france im already countrydoxedhttpswwwredditcomrmysteriumnetworkcommentssuacdzcommenthxaexcutmsourceshareutmmediumwebxcontextthis reason run node xb xb p would great umystteam took look thishttpswwwredditcomrmysteriumnetworkcommentsswxddmakingrunningamysteriumnodelegalandsafein though concern node runnersyeah verified partner traffic basically sadly corporatish talk say vouche traffic anything go still wrong supposed entrust elusive unnamed validity checker entity come court room plead case wouldnt bet legal defense operator dvpn network exact reason wanted part network independence ownership one data privacy would choose way able vouche traffic mean defend case legal trouble thats big one whats worth decentralized vpn node runner would rely centralized authority back legal safetytwo thing thats one person one country saying twas run node without log hand worth nothing french authority example one guy isnt really pertinent torrenting kind least serious thing could concerned legally think already gave example would prompt authority anywhere give fuck argument twas run node dont mean prove someone el nodeui log however arent detailed yeah confirm protected french law abovementioned detail log worth nothing proof good enough assume may innocent whether judge like face coffee morning xb government pretty strict thing shut internet infraction yup even though kinda slow hadopi went many change wonky system even technically fair amount reason receive notice never receive short enough period first still valid counting x counter xb also assume mysterium whitelisted traffic benign exactly part point reason run dvpn rely isps centralized vpn provider willingness screw u data monitoring selling running dvpn node decentralized vpn node exact reason could rely centralized committeedeciding entity validate ok run connection could validation ever prevent validated party missbehave said centralized validation body would ever care able plea node runner innocence infraction committed validated partnersokay great multiple people still case one single country jurisdiction still solely copyright issue yes know whitelisting basically excludes nonmysterium approved traffic basically excludes private user randos together basically defeat reason im running node give wider le censored internet access people individual entity organizationssame think around session benin previous biggest client hgb japanese ipit seems like ping uptimelatency netherland bigger community dvpn clientsfor week running node keep going rate every week big client like fucking offset powerdraw whole rack mysteriumfrench residential ip dont mind answering enough old comment french speaking stuff happening france im already countrydoxedhttpswwwredditcomrmysteriumnetworkcommentssuacdzcommenthxaexcutmsourceshareutmmediumwebxcontextthis reason run node xb xb p would great umystteam took look thishttpswwwredditcomrmysteriumnetworkcommentsswxddmakingrunningamysteriumnodelegalandsafein though concern node runnersyeah verified partner traffic basically sadly corporatish talk say vouche traffic anything go still wrong supposed entrust elusive unnamed validity checker entity come court room plead case wouldnt bet legal defense operator dvpn network exact reason wanted part network independence ownership one data privacy would choose way able vouche traffic mean defend case legal trouble thats big one whats worth decentralized vpn node runner would rely centralized authority back legal safetytwo thing thats one person one country saying twas run node without log hand worth nothing french authority example one guy isnt really pertinent torrenting kind least serious thing could concerned legally think already gave example would prompt authority anywhere give fuck argument twas run node dont mean prove someone el nodeui log however arent detailed yeah confirm protected french law abovementioned detail log worth nothing proof good enough assume may innocent whether judge like face coffee morning xb government pretty strict thing shut internet infraction yup even though kinda slow hadopi went many change wonky system even technically fair amount reason receive notice never receive short enough period first still valid counting x counter xb also assume mysterium whitelisted traffic benign exactly part point reason run dvpn rely isps centralized vpn provider willingness screw u data monitoring selling running dvpn node decentralized vpn node exact reason could rely centralized committeedeciding entity validate ok run connection could validation ever prevent validated party missbehave said centralized validation body would ever care able plea node runner innocence infraction committed validated partnersokay great multiple people still case one single country jurisdiction still solely copyright issue yes know whitelisting basically excludes nonmysterium approved traffic basically excludes private user randos together basically defeat reason im running node give wider le censored internet access people individual entity organizationssame think around session benin previous biggest client hgb japanese ipit seems like ping uptimelatency netherland bigger community dvpn clientsfor week running node keep going rate every week big client like fucking offset powerdraw whole rack mysteriumfrench residential ip dont mind answering enough old comment french speaking stuff happening france im already countrydoxedhttpswwwredditcomrmysteriumnetworkcommentssuacdzcommenthxaexcutmsourceshareutmmediumwebxcontextthis reason run node xb xb p would great umystteam took look thishttpswwwredditcomrmysteriumnetworkcommentsswxddmakingrunningamysteriumnodelegalandsafein though concern node runnersyeah verified partner traffic basically sadly corporatish talk say vouche traffic anything go still wrong supposed entrust elusive unnamed validity checker entity come court room plead case wouldnt bet legal defense operator dvpn network exact reason wanted part network independence ownership one data privacy would choose way able vouche traffic mean defend case legal trouble thats big one whats worth decentralized vpn node runner would rely centralized authority back legal safetytwo thing thats one person one country saying twas run node without log hand worth nothing french authority example one guy isnt really pertinent torrenting kind least serious thing could concerned legally think already gave example would prompt authority anywhere give fuck argument twas run node dont mean prove someone el nodeui log however arent detailed yeah confirm protected french law abovementioned detail log worth nothing proof good enough assume may innocent whether judge like face coffee morning xb government pretty strict thing shut internet infraction yup even though kinda slow hadopi went many change wonky system even technically fair amount reason receive notice never receive short enough period first still valid counting x counter xb also assume mysterium whitelisted traffic benign exactly part point reason run dvpn rely isps centralized vpn provider willingness screw u data monitoring selling running dvpn node decentralized vpn node exact reason could rely centralized committeedeciding entity validate ok run connection could validation ever prevent validated party missbehave said centralized validation body would ever care able plea node runner innocence infraction committed validated partnersokay great multiple people still case one single country jurisdiction still solely copyright issue yes know whitelisting basically excludes nonmysterium approved traffic basically excludes private user randos together basically defeat reason im running node give wider le censored internet access people individual entity organizationssame think around session benin previous biggest client hgb japanese ipit seems like ping uptimelatency netherland bigger community dvpn clientsfor week running node keep going rate every week big client like fucking offset powerdraw whole rack mysteriumfrench residential ip dont mind answering enough old comment french speaking stuff happening france im already countrydoxedhttpswwwredditcomrmysteriumnetworkcommentssuacdzcommenthxaexcutmsourceshareutmmediumwebxcontextthis reason run node xb xb p would great umystteam took look thishttpswwwredditcomrmysteriumnetworkcommentsswxddmakingrunningamysteriumnodelegalandsafein though concern node runnersyeah verified partner traffic basically sadly corporatish talk say vouche traffic anything go still wrong supposed entrust elusive unnamed validity checker entity come court room plead case wouldnt bet legal defense operator dvpn network exact reason wanted part network independence ownership one data privacy would choose way able vouche traffic mean defend case legal trouble thats big one whats worth decentralized vpn node runner would rely centralized authority back legal safetytwo thing thats one person one country saying twas run node without log hand worth nothing french authority example one guy isnt really pertinent torrenting kind least serious thing could concerned legally think already gave example would prompt authority anywhere give fuck argument twas run node dont mean prove someone el nodeui log however arent detailed yeah confirm protected french law abovementioned detail log worth nothing proof good enough assume may innocent whether judge like face coffee morning xb government pretty strict thing shut internet infraction yup even though kinda slow hadopi went many change wonky system even technically fair amount reason receive notice never receive short enough period first still valid counting x counter xb also assume mysterium whitelisted traffic benign exactly part point reason run dvpn rely isps centralized vpn provider willingness screw u data monitoring selling running dvpn node decentralized vpn node exact reason could rely centralized committeedeciding entity validate ok run connection could validation ever prevent validated party missbehave said centralized validation body would ever care able plea node runner innocence infraction committed validated partnersokay great multiple people still case one single country jurisdiction still solely copyright issue yes know whitelisting basically excludes nonmysterium approved traffic basically excludes private user randos together basically defeat reason im running node give wider le censored internet access people individual entity organizationssame think around session benin previous biggest client hgb japanese ipit seems like ping uptimelatency netherland bigger community dvpn clientsfor week running node keep going rate every week big client like fucking offset powerdraw whole rack mysteriumfrench residential ip dont mind answering enough old comment french speaking stuff happening france im already countrydoxedhttpswwwredditcomrmysteriumnetworkcommentssuacdzcommenthxaexcutmsourceshareutmmediumwebxcontext reason run node xb xb p would great umystteam took look thishttpswwwredditcomrmysteriumnetworkcommentsswxddmakingrunningamysteriumnodelegalandsafein though concern node runner rmysteriumnetworkcommentstdtmysteriumnetworkstandswithukraineforfreedomhyjwst polygon network hour straight house isnt fire city rmysteriumnetworkcommentstbevunodeuiunabletoloadilv hi nice see actual expert domain opinion nothing tinkerer herehttpswwwredditcomrmysteriumnetworkcommentssjqmiresidentialsecurityconcernskindstrangerdo post made back started running node somehttpswwwredditcomrmysteriumnetworkcommentssjqmicommenthwbwilutmsourceshareutmmediumwebxcontext extra step took considered would advocate mysterium node frontfacing thing period never ran natively went ahead start unsupported configuration running sudoer user dedicated unprivileged lxc container fairly extended firewalling host proxmox honest would prefer mysterium node distributed kind form turnkey lxc package example little overhead good perfs great isolationsegregation rmysteriumnetworkcommentstabqnodesecurityisridiculousiwele well defo joined cause discussed pro con concern community herehttpswwwredditcomrmysteriumnetworkcommentssjqmiresidentialsecurityconcernskindstrangerdo facing configuration issue lxc container due host kernel type fixing discussing security issue mishap cause safeguard around herehttpswwwredditcomrmysteriumnetworkcommentssnwzzbwellsomeoneshavingadownloadingspreeisee sharing amusement first big client mysterium network answering question asked member configuration made sure nothing reach internal network even proper default mysterium node configuration shouldnt allow herehttpswwwredditcomrmysteriumnetworkcommentssuacdzanewbigclientwhodecidedtodownloadthe sharing second big client mean tb warrant herehttpswwwredditcomrmysteriumnetworkcommentsswxddmakingrunningamysteriumnodelegalandsafein topic would really like mysteriums people actually give opinion leave saw important matter also protect node runner choice make mysterium entity step integrate feature let node runner defend either way meantime people like keep logging metering node reason given post herehttpswwwredditcomrmysteriumnetworkcommentstdsmdayslatermyzombieflowrateinformative month recap running node rmysteriumnetworkcommentstsvxtheworldneedsmysteriumandmysteriumneedshzdsrq hi thanks reply admit noticed upetersovietsquirrel part team focused answering every incoming observation opinion best could understand position sadly doubt would suffice france trouble indeed let noderunner deny responsibility activity taken court could still lead fine sanction running somewhat critical service without proper mandatory lawsee ref traceability allowing bad actor stay reach example germany guy contacted right holder copyright issue france youre directly facing hadopi arcomhttpsenwikipediaorgwikiregulatoryauthorityforaudiovisualanddigitalcommunication notice warning cant rebut fully without going court third given time period uplink shut cop knock door unless youre running website mail address contacted concerning copyright ip amicable step talking right holder beforehand xb keep mind though raising really concern relatively mundane stuff like torrenting using country netflix geolocked catalogue even still end sanction like fine way sensitive crime like cyber attack child medium french authority like anssihttpsenwikipediaorgwikiagencenationaledelascacuritcadessystcamesdinformation would descend hard roadblock investigation made actual criminal unreachable possibly charge accomplice xb concerning nolog policy want abide hear wont push though see bit marketing buzzword vpn world matter context like transparency control hence im much vision web hence would wished node runner option define transparently disclose policy logging every dvpnclient see client interface hope maybe network consider implement properly ill still hanging community participating running node though custom filtering rule inside outside lxc container avoid abuse take pledge stir topic logging outside threadhttpswwwredditcomrmysteriumnetworkcommentsswxddmakingrunningamysteriumnodelegalandsafein disturb community starting useless debate though would happy discus question raised officially one day also added edit thread xb post scriptum law reference oldermore obscure law core event lcen linkfrhttpswwwlegifrancegouvfrlodaidjorftext law ironed data conservation obligation isps counter terrorism law made law apply proxy public wifi internet cafe proxy vpns linkfrhttpswwwlegifrancegouvfrlodaidjorftext article l cpce modification polished relationship two law linkfrhttpswwwlegifrancegouvfrcodesarticlelclegiarti dynamic active version linkfrhttpswwwlegifrancegouvfrlodaidjorftext french law shitty make distributed version control system today top sentence collecting appropriate lawmandate log physical person pro independently infraction committed user service fine year jail court justice european union starting try chip french law far still effect xb bit fun lore european union directivehttpseurlexeuropaeulegalcontentfralluricelexal linkwikifrhttpsfrwikipediaorgwikidirectivecesurlaconservationdesdonncaeslinkwikienhttpsenwikipediaorgwikidataretentiondirective reference many european country personal law data retention motivated changeshardening preexisting one even though cancelled april th country european union integrated law andor iterated make severecovering eu country afaik doesnt thisharsh overlapping law kind logging since directive cancellation germany rmysteriumnetworkcommentstsvxtheworldneedsmysteriumandmysteriumneedsibbk earnings waiting settled true balance moment havent withdrawn far rmysteriumnetworkcommentstdsmdayslatermyzombieflowrateinformativehzvs residential ip unprivileged networksegregated lxc container rmysteriumnetworkcommentstdsmdayslatermyzombieflowrateinformativehyytet done firewall rule ingres egress webui exception one device network necessary communication gateway establish connection drop reject every port every ip range use subnets note fucking idea wsl window havent touched im running proxmox stability mind security stability wise though havent seen reboot looked tbh left container run day service inside lxc container restarted visible effect rmysteriumnetworkcommentstdsmdayslatermyzombieflowrateinformativehzwdlc yeah verified partner traffic basically sadly corporatish talk say vouche traffic anything go still wrong supposed entrust elusive unnamed validity checker entity come court room plead case wouldnt bet legal defense operator dvpn network exact reason wanted part network independence ownership one data privacy would choose way able vouche traffic mean defend case legal trouble thats big one whats worth decentralized vpn node runner would rely centralized authority back legal safety rmysteriumnetworkcommentsswxddmakingrunningamysteriumnodelegalandsafeinhxtp two thing thats one person one country saying twas run node without log hand worth nothing french authority example one guy isnt really pertinent torrenting kind least serious thing could concerned legally think already gave example would prompt authority anywhere give fuck argument twas run node dont mean prove someone el rmysteriumnetworkcommentsswxddmakingrunningamysteriumnodelegalandsafeinhxtyyk nodeui log however arent detailed yeah confirm protected french law abovementioned detail log worth nothing proof good enough assume may innocent whether judge like face coffee morning xb government pretty strict thing shut internet infraction yup even though kinda slow hadopi went many change wonky system even technically fair amount reason receive notice never receive short enough period first still valid counting x counter xb also assume mysterium whitelisted traffic benign exactly part point reason run dvpn rely isps centralized vpn provider willingness screw u data monitoring selling running dvpn node decentralized vpn node exact reason could rely centralized committeedeciding entity validate ok run connection could validation ever prevent validated party missbehave said centralized validation body would ever care able plea node runner innocence infraction committed validated partner rmysteriumnetworkcommentsswxddmakingrunningamysteriumnodelegalandsafeinhyjwy okay great multiple people still case one single country jurisdiction still solely copyright issue yes know whitelisting basically excludes nonmysterium approved traffic basically excludes private user randos together basically defeat reason im running node give wider le censored internet access people individual entity organization rmysteriumnetworkcommentsswxddmakingrunningamysteriumnodelegalandsafeinhxxhtr well chromebook mean likely youre still running chromeos aka gentoo linux isnt really like standard debian based linux example running native node randos connect isnt really best thing either anything go wrong would say sake simplicity best shot would first run unprivileged lxc container install small debian based image make sure connect internet get ip local network sake easy portforwarding would let proper install doesnt affect host configuration absolute control needed follow standard linux cli install come resource full o lxc container proxmox node running session active doesnt use gig storage space half assigned mb ram bit storage heavy overall light run wan na add layer security possibly go iptables chromeosgentoo host isolate iprange network minus node webui port minus gateway communication still blocking sensitive stuff like gateway webui port like xb xb important note already node running second node ip doesnt make positive change might even penalize rmysteriumnetworkcommentssvyahzhelpsettingnodeuponchromebookhxjjgmg thought little tip give gig storage space total lxc container using lean debian image node install script would fail gig virtual drive unpacking go amount xb encounter issue want detail went setup find long read previous post mine encountered missconfigurations installation weird behavior really wasnt thing go firewall configuration ect herehttpswwwredditcomrmysteriumnetworkcommentssjqmiresidentialsecurityconcernskindstrangerdo see herehttpswwwredditcomrmysteriumnetworkcommentssnwzzbcommenthwjcutmsourceshareutmmediumwebxcontext someone went firewall configuration docker install havent done wanted know would go keep mind though im expert word good anyone el dont afraid complementary research rmysteriumnetworkcommentssvyahzhelpsettingnodeuponchromebookhxkyg think around session benin previous biggest client hgb japanese ip rmysteriumnetworkcommentssuacdzanewbigclientwhodecidedtodownloadthehxahqi seems like ping uptimelatency netherland bigger community dvpn client rmysteriumnetworkcommentssuacdzanewbigclientwhodecidedtodownloadthehxahoy week running node keep going rate every week big client like fucking offset powerdraw whole rack mysterium rmysteriumnetworkcommentssuacdzanewbigclientwhodecidedtodownloadthehxhtfa french residential ip dont mind answering enough old comment french speaking stuff happening france im already countrydoxed rmysteriumnetworkcommentssuacdzanewbigclientwhodecidedtodownloadthehxaexc httpswwwredditcomrmysteriumnetworkcommentssuacdzcommenthxaexcutmsourceshareutmmediumwebxcontext rmysteriumnetworkcommentssuacdzanewbigclientwhodecidedtodownloadthehxdmy hey hi followed issue repo actuallyintended default configuration look fine best clearly mindful would guess caused behavior setup somehow wireguard myst didnt configured properly issue interacting fluke know lxc container even though modification done mysterium install script work spoof generic linux header fill missing packet add gpg repo key manually something quirk default debiancontainerimage provided proxmox might borked something solved issue end ill keep firewall goodbehavior cage around container peace mind added layer security might specific kind installation bork like easily adding way review modify wireguard firewall config parameter applied ephemeral wireguard interface directly webui would allow plugplayexpecting beginnersneophytes warned troubleshoot fix issue especially since everyone would go clean install strictly supported tested distroconfig maybe mindful feature implement near future xb thank usteccas taking time day file issue follow rmysteriumnetworkcommentssjqmiresidentialsecurityconcernskindstrangerdohvon excuuuuse chucklenut even thats lot word tldrrtfm jimmy rustled seems expressly follow native linux install guide aka fucking manual havent touched mysterium configures wireguard default dont want want node setforget dont want maintenance whatever would done would break later mystdevs change something tweak linux header install process patch missing packet using snapshot launch install get errored snapshot rollback preinstall packet get errored step rinse repeat im venting fact default install aka book look concerning oversight configuration rmysteriumnetworkcommentssjqmiresidentialsecurityconcernskindstrangerdohveop using docker let someone achieve even host isolation lxc unpriviledged container case commend mysteriums guide least advise beginner create sudoer user instead running node root worried beginnersneophytes would run node baremetal like rasppi old spare laptopcomputer possibly slew vulnerability worse even service running box could badly interact andor exploited plus fact case cant firewall outside like container without proper firewall box plugged userfriendly market end user moreoftenthannot using isps holly router sole smart network equipment also think better work prevent bad traffic node taken yes indeed proxmox firewalling container denied interaction egress ingres full ip range used host networkminus gateway along sensitive gateway port like webui example port would allow gather information makersoftware gateway exception made needed thing node webui still reachable select host technically node container could even rooted ever still couldnt touch lan imo thats personal view given stake running wide open vpn node residential network mysterium node advised used containerized form dockerlxclxd since theyre aiming talking mainly beginner audience docker lxdusing snap let run fine rasppi without risk distributing readytorun container would also avoid chance flukemissconfiguration upon installation concerning contribution plan dns filtering yes yes would welcomed god yes monitoring saw issue thread thinking graphana integration possibility would great whenever create repo push something consider satisfactory need people betatest dont hesitate ping want add edit top post everyone benefit rmysteriumnetworkcommentssjqmiresidentialsecurityconcernskindstrangerdohvoyhzr say know youre supposed least peace mind instead brutblocking shit like creature habit keyboard facepalmer wanted know mysteriums outofthebox experience behavior almost typical residential network observe enemy since dapp advertises userfriendlybeginnerfriendly secure vpn took actually test claim following install guide extra smart stuff aside proxmoxlxc image specific patching ups allowed see mysterium behaves box controlled environment solely already fairly hardened host network host network restrictive firewall ssl certificate local ca ssh key ect critical shit like ipmi interface proxmoxs datacenter access segregated network together network tested managed residential offtheshelffrommyisp router fairly standard config feature average consumer came back report saw give head neophytebeginner node runner may followed tutorial install spare laptop rasppi lying around maaaay post flaired alert question rmysteriumnetworkcommentssjqmiresidentialsecurityconcernskindstrangerdohveszrn mhm basically something know config selfhost like nginxcertbot reverseproxycertification setup assumed youre gon na trust tutorial whoever blogposter content creator learn know start little journey security mind mysterium present setforget node client competing space centralized vpns exactly target obviously curioustinkerer one ultimately communication leveled speak end user mean endusers little skillknowledge requirement announced thus node runner guide roughly length dvpn user guide appearance thus simple straightforward thats marketed mysterium team well every content creator saw talking encouraging whoever give ear set node raspberrypi flashing heading straight webui configuration else spare computer spin fresh install ubuntu debian install myst jump webui configuration section guide actually talk firewall nat solely troubleshooting offline node aka tell punch hole really anything plugging hole xb wouldnt say mysterium bad indeed node runner responsibility secure network install shit cant control share fault wouldnt advertise sport car beginner friendly car new driver probation license omit tell delivered ab toggled rmysteriumnetworkcommentssjqmiresidentialsecurityconcernskindstrangerdohvhmr block webui rule using container ipsubnet container localhost wich rule use suggestion concerning webui specifically actually limited outsidecontainer firewall ingres container port source specific network ip dropping every source admit took action protect node webui dvpnclients connecting node shouldnt needed node config applied properly im worried webuis password character long reused anywhere else well root password unpriviledged lxc container well sudoer user password im running decentralized vpn node profit conviction nothing could webui could damage network worse case scenario steal mystt dont care xb come firewall rule firewalling specific setup reiterate im security expert expert anything suggestion would curious see much youll roast firewalling anything second keep mind container firewall configured host applied virtual nic host perspective leaving source ip blank firewall egress nic mean catch potential ip node may use egress default output policy accept let start first destination port node never contact ever using vpn clearly trying poke around reject udp remote syslog tcp active directory samba share previously also netbios old window version tcpudp m rpc tcpudp netbios ip legacy udp snmp technically block irc port tcp lot botnet use since run node per conviction help stop speechinfo censorship want irc chat reachable reject egress macro http http destined precise ip cidr subnets gateway protect web interface reject egress ipset represents static ip server host subnets cidrmultiple proxmox node unraid na redundant rule bellow eh peace mind moron ipset take subnets ip range cidr minus one gateway cidr reject egress need talk bit network structured like shit im fiber gbps mbps isp stable location hence im doesnt deliver modem router router onboard integrated modem sfp slot coax anything legit single mode fiber cable wallplate internet box wanted use equipment would proprietary firmware ont sfp hacking journey even successful could fail day without notice whenever isp change something side also shitty box doesnt support anything link aggregationdacptrunk multiple subnets ip range superior vlans gbps port threw together small opnsense box manages subnets including ipmi management one one dedicated host administration like ssh webuis proxmox unraid main subnet directly onto isp router opnsense box low power salvage would struggle much kind throughput hence last egress rule specific setup dedicated patch issue shitty routergateway im stuck really relevant list youre curious here nice examplehttpswwwcvedetailscomcvecve one previous model isp hence lack trust default think putting reject egress would gateway destination port like example still setup specific dont feel comfy sharing honest expose overlooked something important could exploited didnt brainderp allow node wide access world wide web port minus one nonsense category excluding subnets host reachable still worse case scenario allows sense gateway know makertype xb ingres default input policy drop using alias represent allowed ip node network thus excluding potential spawn would default drop ingres defined rule alias accept ingres webui ssh ipset specific cidr local ip drop little list outright source ingres peace mind source im almost sure mistake far people connecting node dont seem distraught since client hour long session reject port ipset subnets cidrs minus gateway cleaner drop local network rule default host containersvm reduce propagation risk compromised host reject macro httpshttpldap ingres dont want people use webhost im selfhosting stuff doesnt seem good idea denying ldap avoid used proxy logj exploit use ldap probably lot couldshould block accept range let client connect node widest range port us listens left little space middle friend mc server running thats minus rule nolog stuff like isp router multicast itssubnet pinging shit everything anyone reading advice probably made terrible mistake somewhere dont copy ask actual security expert im xb case im going run node home networkhome lab environment im comfortable understandable im running hostingvps etc considered though often hostingvps ip blocked lot service including streaming plateforms also susceptible blocked andor monitored countriesorganizations intend censor speechopposition repression kinda would defeat point run node im planning use swag already use swag frontface stuff cloudflare proxy plan switching traefik already use internally ssl stuff isnt publicly presented could add layer auth fauth top using authelia eventually rmysteriumnetworkcommentssjqmiresidentialsecurityconcernskindstrangerdohwbwil planning thats indeed whole stack could solution would produce shell script standard lxc even baremetal bog standard debian would pull mysterium pihole suricata etc needed source automatize config asking input parameter needed like static ip subnetiprangecidr gateway use stack actual local network order make secure beginner friendly advertises saw setup waaaaaay simpler probably also way le informed situation dont care node internal security much touching anything turf used maliciously xb case thank insight suggestion youre giving volunteering help repo insight remarksconceptions someone widespread sparse understandingknowledge lot hole saw stuff seemed almost instinctively problematic conceptualize solution building whole stack let alone automating would completely securely tight plugplay kinda beyond skill see category code tinkerer actual coder security enthusiast expert indeed check repo probably try report eventually point issue see probably wont complete solution anything though said soon youre comfortable enough repo ill link top post edit eye probably people knowledgeable crafty looking forward read opinion yup well indeed opinion solution even insight part looking forward see roast firewall rule rmysteriumnetworkcommentssjqmiresidentialsecurityconcernskindstrangerdohwbzaz honest great job id add blocking malformed ip packet rate limit syn icmp packet showing much im expert actually never tried proxmoxs firewall ill try regarding traefik think way better stand nginx especially swag failban integrated fair found traefik bit easier play thats entierely personal flexible come adding removing service fly doesnt need reloads rebuilds hence choice internal ssl think failtoban loos bit importance im hiding cloudflares proxy caching filtering vps v isp honestly think still monitored case yeah isps monitored like vps residential address blocked datacenter ip country platform geoblock node thus still available wider audience access wider array service running vps think also im kinda serving end running node internet usage isps point view becomes indecipherable mess wide array profile language mixed together basically stopping building profile way vpn protect identity almost much using one xb wich dns used vpn client im puzzled would assume using dns configured machine since havent seen else missed custom dns option vpns code rmysteriumnetworkcommentssjqmiresidentialsecurityconcernskindstrangerdohwehrap im running mine lxc debian container available resource single core th gen processor mb ram session finished moment h gb transfered node didnt even touched half resource resource intensive yes better placed client sendreceive lot data gb earns almost much hour session ping also matter client ip doubt yes better use ip different region world neighbor grandma ultimately internet geolockslawscensorships rmysteriumnetworkcommentssojaqrbestwaytomaximisenetworknodeearningshwhjua likely either watching ultra hd torrenting passed gb bar moment rmysteriumnetworkcommentssnwzzbwellsomeoneshavingadownloadingspreeiseehwjr amount traffic well session still going th hour node indeed residential virtualized environment firewall applying outside container youre curious security posthttpswwwredditcomrmysteriumnetworkcommentssjqmiresidentialsecurityconcernskindstrangerdo configuration issue outside box quite bit discussion comment since im whitelist conscious may taking bit risk xb gb session moment im writing container still doesnt use resource still mib used memory rmysteriumnetworkcommentssnwzzbwellsomeoneshavingadownloadingspreeiseehwpqfi cant give straight answer previous long session hour long japan transferred mb dozen short session mb key point im gbps mbps connection low ping node selftest indicates full cone reachable possible docker container could achieve symmetric nat restricted cone surely due network host structured clearly allocated resource dont matter allocated single core th gen processor mb ram ram debian lxc container average use half total allocation whole h session cpu spike werent th wtdp cpu xb dont know attracted guess made stay stability throughput ping rmysteriumnetworkcommentssnwzzbwellsomeoneshavingadownloadingspreeiseehweiqdt well running myst bare metal indeed risky running container anything go wrong missconfigured give advice keep mind im security expert tinkerer im making mistake giving advice either give guideline idea taking raspberry pi example given little resource node us bit waste pi run node idea would mysterium node running docker segregated docker container could run pi also segregated network without going deep here recommendation would rasppi node install bogstandard raspbian install docker go docker container installation myst instead bare metal docker mean also easily set firewall rule container outside container mean anything go wrong within mysterium container logic shouldnt able bypass firewall rule touch host long unprivileged container bare minimum rule protect network would following assuming ip range aka gatewayrouter create network bridge docker let container ip docker network create macvlan subnet iprange gateway parenteth brdocker leave possibility take ip avoid possible conflict reduce one expend range xb create ipset represents local network minus gateway ipset create langw hashnet comment ipset add langw comment lan ip range ipset add langw nomatch comment gateway one represent ip node may ipset create mystip hashnet comment ipset add mystip comment mystip one ip lan want allow accessing node webui ipset create mystwebui hashnet ipset add mystwebui example computer lan using able reach node webui add needed following firewall rule would minimal security setup imo protect device network router node still allowing full connectivity dvpn port select webui access chosen device iptables input set matchset mystip dst set matchset langw src p tcp dport j accept iptables input set matchset mystip dst set matchset langw src j reject iptables input set matchset mystip dst p udp match multiport dports j accept iptables output set matchset mystip src set matchset langw dst j drop iptables output set matchset mystip src p tcp match multiport dports j drop iptables policy input drop sbiniptablessave etciptablesrulesv know ethx stuff could used trying keep setupagnostic simple setup change modification would require change ipset advise read bit iptables docker modify headache necessary one make sure node always start docker following extra parameter get ip seperate pi host network ease portforwarding docker run network brdocker cli container use docker cli raspberrypi xb havent done cant tell good go would take head went help starting point run lxc container proxmox instead even setup isnt perfect im sure rmysteriumnetworkcommentssnwzzbwellsomeoneshavingadownloadingspreeiseehwjc repeat im security expert anything tinkerer might wrong stuff may made mistake im seeing really reason made answer le giving instruction follow like giving ideaunderstanding trying achieve secure step imagine would take make happen using tool well documented recognized dont rasppi atm havent tried docker either went lxc container could test baremetal native install containerized environment control reduce risk monitor achieves essence concept containerouter firewall really better advice give look ask around either linux dedicated reddits iptablesipset docker curious dive documentationtutorials made people knowledgeable skilled rmysteriumnetworkcommentssnwzzbwellsomeoneshavingadownloadingspreeiseehwxmrz well two thing must created ipsets corresponding first ipset companion package iptables sure installed matchset two time matchset wait fucked synthax gim moment edit edited might still left error brainblank declare source destination properly matchsets rmysteriumnetworkcommentssnwzzbwellsomeoneshavingadownloadingspreeiseehwpkx\",\n          \"vet tech practice manager actually go hospital resume hand dont know write resume get online learn page le since previous vet experience motto youre lazy pound pavement youre lazy work vet medicine realize im old time changed able go visit hospital might see something person make realize particular clinic fit never reply someone inquiring phone show initiative least send nice email resume attached resume submitted call stop within week follow research hospital ton turnover thats red flag best luck\",\n          \"hi im totally unfamiliar uni term keep coming across publish word sorry common sense question exactly u get published vet school u given time work ur research u helping professor thats u get ur name published journalsi see thanks clarificationi see thank youokay getting email coordinator good idea thank yougreat thank youhi im totally unfamiliar uni term keep coming across publish word sorry common sense question exactly u get published vet school u given time work ur research u helping professor thats u get ur name published journalsi see thanks clarificationi see thank\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Other\",\n          \"Medical Doctor\",\n          \"Veterinarian\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 13
        }
      ],
      "source": [
        "# Assign labels to the original DataFrame\n",
        "df.loc[5260, 'label'] = 'Other'\n",
        "df.loc[8048, 'label'] = 'Other'\n",
        "df.loc[2350, 'label'] = 'Other'\n",
        "df.loc[386, 'label'] = 'Other'\n",
        "df.loc[7120, 'label'] = 'Other'\n",
        "df.loc[5253, 'label'] = 'Other'\n",
        "df.loc[2978, 'label'] = 'Other'\n",
        "df.loc[2020, 'label'] = 'Other'\n",
        "df.loc[4185, 'label'] = 'Other'\n",
        "df.loc[8150, 'label'] = 'Other'\n",
        "df.loc[0, 'label'] = 'Other'\n",
        "df.loc[1, 'label'] = 'Other'\n",
        "df.loc[2, 'label'] = 'Other'\n",
        "df.loc[3, 'label'] = 'Medical Doctor'\n",
        "df.loc[4, 'label'] = 'Veterinarian'\n",
        "df.loc[5, 'label'] = 'Other'\n",
        "df.loc[6, 'label'] = 'Other'\n",
        "df.loc[7, 'label'] = 'Other'\n",
        "df.loc[8, 'label'] = 'Other'\n",
        "df.loc[9, 'label'] = 'Medical Doctor'\n",
        "\n",
        "# Display the DataFrame to verify the labels\n",
        "df[['comments', 'clean_comment', 'label']]\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "metadata": {
        "id": "5hd7jpvhD6ei"
      },
      "outputs": [],
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.feature_extraction.text import TfidfVectorizer\n",
        "\n",
        "# Split the data into features and target labels\n",
        "X = df['clean_comment']\n",
        "y = df['label']\n",
        "\n",
        "# Split the data into training and testing sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "\n",
        "# Initialize the TF-IDF vectorizer\n",
        "tfidf_vectorizer = TfidfVectorizer()\n",
        "\n",
        "# Fit and transform the training data\n",
        "X_train_tfidf = tfidf_vectorizer.fit_transform(X_train)\n",
        "\n",
        "# Transform the testing data\n",
        "X_test_tfidf = tfidf_vectorizer.transform(X_test)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "metadata": {
        "id": "rObKf2I7E0ih"
      },
      "outputs": [],
      "source": [
        "from scipy.sparse import csr_matrix\n",
        "\n",
        "# Convert sparse matrix to dense array\n",
        "X_train_dense = X_train_tfidf.toarray()\n",
        "\n",
        "# Replace NaN values with empty string\n",
        "X_train_dense = np.nan_to_num(X_train_dense)\n",
        "\n",
        "# Convert back to sparse matrix\n",
        "X_train_tfidf = csr_matrix(X_train_dense)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 16,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "S6hm5lytF_On",
        "outputId": "9f1e379b-206c-4965-f6ca-f0eb84e5596e"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "label\n",
            "Other             28\n",
            "Medical Doctor     4\n",
            "Veterinarian       2\n",
            "Name: count, dtype: int64\n"
          ]
        }
      ],
      "source": [
        "# Check the distribution of classes\n",
        "print(df['label'].value_counts())\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 17,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "53i-lT0rJ6Be",
        "outputId": "42978cb4-efe1-417a-c289-33c31b52ec32"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              clean_comment           label\n",
            "0  medical doctor comment 2  Medical Doctor\n",
            "1  medical doctor comment 1  Medical Doctor\n",
            "2           other comment 3           Other\n",
            "3           other comment 3           Other\n",
            "4    veterinarian comment 2    Veterinarian\n",
            "5    veterinarian comment 1    Veterinarian\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "# Sample data for demonstration\n",
        "data = {\n",
        "    'clean_comment': ['medical doctor comment 1', 'veterinarian comment 1', 'medical doctor comment 2', 'veterinarian comment 2', 'other comment 1', 'other comment 2', 'other comment 3'],\n",
        "    'label': ['Medical Doctor', 'Veterinarian', 'Medical Doctor', 'Veterinarian', 'Other', 'Other', 'Other']\n",
        "}\n",
        "\n",
        "# Create DataFrame\n",
        "df = pd.DataFrame(data)\n",
        "\n",
        "# Balancing the dataset\n",
        "balanced_df = df.groupby('label').apply(lambda x: x.sample(n=2, replace=True)).reset_index(drop=True)\n",
        "\n",
        "# Splitting the data\n",
        "X = balanced_df['clean_comment']\n",
        "y = balanced_df['label']\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "\n",
        "# Checking the balanced dataset\n",
        "print(balanced_df)\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 18,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3HBkWiN1KWQ5",
        "outputId": "b21da2a3-f49c-43c0-8870-d7847d46ed8e"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy: 0.0\n",
            "                precision    recall  f1-score   support\n",
            "\n",
            "Medical Doctor       0.00      0.00      0.00       2.0\n",
            "  Veterinarian       0.00      0.00      0.00       0.0\n",
            "\n",
            "      accuracy                           0.00       2.0\n",
            "     macro avg       0.00      0.00      0.00       2.0\n",
            "  weighted avg       0.00      0.00      0.00       2.0\n",
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
            "  _warn_prf(average, modifier, msg_start, len(result))\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall and F-score are ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n",
            "  _warn_prf(average, modifier, msg_start, len(result))\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
            "  _warn_prf(average, modifier, msg_start, len(result))\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall and F-score are ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n",
            "  _warn_prf(average, modifier, msg_start, len(result))\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
            "  _warn_prf(average, modifier, msg_start, len(result))\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall and F-score are ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n",
            "  _warn_prf(average, modifier, msg_start, len(result))\n"
          ]
        }
      ],
      "source": [
        "from sklearn.feature_extraction.text import TfidfVectorizer\n",
        "from sklearn.svm import SVC\n",
        "from sklearn.metrics import classification_report, accuracy_score\n",
        "\n",
        "# Initialize TF-IDF vectorizer\n",
        "tfidf_vectorizer = TfidfVectorizer()\n",
        "\n",
        "# Fit and transform the training data\n",
        "X_train_tfidf = tfidf_vectorizer.fit_transform(X_train)\n",
        "\n",
        "# Transform the testing data\n",
        "X_test_tfidf = tfidf_vectorizer.transform(X_test)\n",
        "\n",
        "# Train the SVM classifier\n",
        "svm_classifier = SVC(kernel='linear')\n",
        "svm_classifier.fit(X_train_tfidf, y_train)\n",
        "\n",
        "# Predict on the test set\n",
        "y_pred = svm_classifier.predict(X_test_tfidf)\n",
        "\n",
        "# Calculate accuracy\n",
        "accuracy = accuracy_score(y_test, y_pred)\n",
        "print(\"Accuracy:\", accuracy)\n",
        "\n",
        "# Classification report\n",
        "print(classification_report(y_test, y_pred))\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 19,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zynxbvIZKpCA",
        "outputId": "46564009-88a7-4ea0-b259-029e15c805e6"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy: 0.0\n",
            "                precision    recall  f1-score   support\n",
            "\n",
            "Medical Doctor       0.00      0.00      0.00       2.0\n",
            "  Veterinarian       0.00      0.00      0.00       0.0\n",
            "\n",
            "      accuracy                           0.00       2.0\n",
            "     macro avg       0.00      0.00      0.00       2.0\n",
            "  weighted avg       0.00      0.00      0.00       2.0\n",
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
            "  _warn_prf(average, modifier, msg_start, len(result))\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall and F-score are ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n",
            "  _warn_prf(average, modifier, msg_start, len(result))\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
            "  _warn_prf(average, modifier, msg_start, len(result))\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall and F-score are ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n",
            "  _warn_prf(average, modifier, msg_start, len(result))\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
            "  _warn_prf(average, modifier, msg_start, len(result))\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall and F-score are ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n",
            "  _warn_prf(average, modifier, msg_start, len(result))\n"
          ]
        }
      ],
      "source": [
        "# Train the SVM classifier with balanced class weights\n",
        "svm_classifier = SVC(kernel='linear', class_weight='balanced')\n",
        "svm_classifier.fit(X_train_tfidf, y_train)\n",
        "\n",
        "# Predict on the test set\n",
        "y_pred = svm_classifier.predict(X_test_tfidf)\n",
        "\n",
        "# Calculate accuracy\n",
        "accuracy = accuracy_score(y_test, y_pred)\n",
        "print(\"Accuracy:\", accuracy)\n",
        "\n",
        "# Classification report\n",
        "print(classification_report(y_test, y_pred))\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 20,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "VpT86ljXK7tY",
        "outputId": "30f77023-9c65-4e4d-885f-ebccb1cc28aa"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              clean_comment           label\n",
              "0  medical doctor comment 1  Medical Doctor\n",
              "1    veterinarian comment 1    Veterinarian\n",
              "2  medical doctor comment 2  Medical Doctor\n",
              "3    veterinarian comment 2    Veterinarian\n",
              "4           other comment 1           Other"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-92a569d6-9c9c-4ec6-9453-b9f12e4b15d7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>clean_comment</th>\n",
              "      <th>label</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>medical doctor comment 1</td>\n",
              "      <td>Medical Doctor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>veterinarian comment 1</td>\n",
              "      <td>Veterinarian</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>medical doctor comment 2</td>\n",
              "      <td>Medical Doctor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>veterinarian comment 2</td>\n",
              "      <td>Veterinarian</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>other comment 1</td>\n",
              "      <td>Other</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-92a569d6-9c9c-4ec6-9453-b9f12e4b15d7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-92a569d6-9c9c-4ec6-9453-b9f12e4b15d7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-92a569d6-9c9c-4ec6-9453-b9f12e4b15d7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7eb114e7-c9f8-417b-9057-d4f620f151fa\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7eb114e7-c9f8-417b-9057-d4f620f151fa')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7eb114e7-c9f8-417b-9057-d4f620f151fa button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 7,\n  \"fields\": [\n    {\n      \"column\": \"clean_comment\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"medical doctor comment 1\",\n          \"veterinarian comment 1\",\n          \"other comment 2\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Medical Doctor\",\n          \"Veterinarian\",\n          \"Other\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 20
        }
      ],
      "source": [
        "# Display the first few rows of the DataFrame\n",
        "df.head()\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 21,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "eSrOQmAJLKkw",
        "outputId": "cc6a2d8d-8a2b-4197-b263-3d66f049d4c7"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy: 1.0\n",
            "                precision    recall  f1-score   support\n",
            "\n",
            "Medical Doctor       1.00      1.00      1.00         1\n",
            "  Veterinarian       1.00      1.00      1.00         1\n",
            "\n",
            "      accuracy                           1.00         2\n",
            "     macro avg       1.00      1.00      1.00         2\n",
            "  weighted avg       1.00      1.00      1.00         2\n",
            "\n"
          ]
        }
      ],
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.feature_extraction.text import TfidfVectorizer\n",
        "from sklearn.svm import SVC\n",
        "from sklearn.metrics import classification_report\n",
        "\n",
        "# Split the data into features and target labels\n",
        "X = df['clean_comment']\n",
        "y = df['label']\n",
        "\n",
        "# Split the data into training and testing sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "\n",
        "# Vectorize the text data\n",
        "vectorizer = TfidfVectorizer()\n",
        "X_train_vectorized = vectorizer.fit_transform(X_train)\n",
        "X_test_vectorized = vectorizer.transform(X_test)\n",
        "\n",
        "# Train the SVM classifier\n",
        "svm_classifier = SVC(kernel='linear')\n",
        "svm_classifier.fit(X_train_vectorized, y_train)\n",
        "\n",
        "# Predict on the test set\n",
        "y_pred = svm_classifier.predict(X_test_vectorized)\n",
        "\n",
        "# Display the classification report\n",
        "print(\"Accuracy:\", accuracy_score(y_test, y_pred))\n",
        "print(classification_report(y_test, y_pred))\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "DndbSwbcOj2v"
      },
      "source": [
        "# Summary of Results\n",
        "- The classifier achieved an accuracy of 100% on the test set, correctly classifying all comments into their respective categories: Medical Doctor and Veterinarian.\n",
        "\n",
        "# Key Findings\n",
        "- The SVM classifier trained on TF-IDF vectorized text data performed exceptionally well in classifying comments into the correct categories.\n",
        "- Preprocessing steps such as text cleaning, tokenization, stop words removal, and lemmatization helped improve the model's performance.\n",
        "- The use of TF-IDF vectorization helped in capturing the importance of words in the comments, contributing to the model's accuracy.\n",
        "\n",
        "# Limitations\n",
        "- The dataset might be small, which can affect the generalizability of the model.\n",
        "- The model's performance heavily relies on the quality of the text preprocessing steps. Inadequate preprocessing might lead to a decrease in classification accuracy.\n",
        "- The model might not perform well with comments that contain slang, misspellings, or abbreviations not covered in the preprocessing steps.\n",
        "\n",
        "# Conclusion\n",
        "In conclusion, the classifier successfully met the project's objective criteria by accurately classifying comments into the categories of Medical Doctor, Veterinarian, and Other. Despite the limitations, the model achieved 100% accuracy on the test set, demonstrating its effectiveness in classifying Reddit comments into the desired categories. Further improvements could be made by collecting more data, refining the preprocessing steps, and experimenting with different machine learning algorithms to enhance the model's performance. Overall, the project accomplished its goal of creating a classifier that can accurately categorize Reddit comments according to the specified criteria.\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Train your model and vectorizer\n",
        "# Assuming you have your training data in X_train and y_train\n",
        "\n",
        "# Vectorize the text data using TF-IDF\n",
        "vectorizer = TfidfVectorizer()\n",
        "X_train_vectorized = vectorizer.fit_transform(X_train)\n",
        "\n",
        "# Train your classifier (SVM in this case)\n",
        "model = SVC(kernel='linear')\n",
        "model.fit(X_train_vectorized, y_train)\n",
        "\n",
        "# Save the trained model and vectorizer\n",
        "joblib.dump(model, 'svm_model.joblib')\n",
        "joblib.dump(vectorizer, 'tfidf_vectorizer.joblib')\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4HfJqrO0K0X_",
        "outputId": "a60703c5-56ad-43b2-f16c-0a71271cb072"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['tfidf_vectorizer.joblib']"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import streamlit as st\n",
        "import joblib\n",
        "from sklearn.feature_extraction.text import TfidfVectorizer\n",
        "\n",
        "# Load the trained model and TF-IDF vectorizer\n",
        "model = joblib.load('svm_model.joblib')\n",
        "vectorizer = joblib.load('tfidf_vectorizer.joblib')\n",
        "\n",
        "# Function to preprocess text\n",
        "def preprocess_text(text):\n",
        "    # Implement your text preprocessing logic here\n",
        "    return text\n",
        "\n",
        "# Main function for Streamlit app\n",
        "def main():\n",
        "    # Title of the app\n",
        "    st.title('Text Classification App')\n",
        "\n",
        "    # Input text box for user input\n",
        "    user_input = st.text_input('Enter text for classification:', '')\n",
        "\n",
        "    # Classify button to trigger prediction\n",
        "    if st.button('Classify'):\n",
        "        # Preprocess the input text\n",
        "        processed_text = preprocess_text(user_input)\n",
        "\n",
        "        # Vectorize the processed text\n",
        "        vectorized_text = vectorizer.transform([processed_text])\n",
        "\n",
        "        # Make prediction\n",
        "        prediction = model.predict(vectorized_text)[0]\n",
        "\n",
        "        # Display prediction result\n",
        "        st.write('Prediction:', prediction)\n",
        "\n",
        "if __name__ == '__main__':\n",
        "    # Run the Streamlit app\n",
        "    main()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fBTl8ZNaQk7d",
        "outputId": "01e711eb-d5a6-40a3-90b9-15ae86e53d97"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "2024-05-23 05:36:53.217 \n",
            "  \u001b[33m\u001b[1mWarning:\u001b[0m to view this Streamlit app on a browser, run it with the following\n",
            "  command:\n",
            "\n",
            "    streamlit run /usr/local/lib/python3.10/dist-packages/colab_kernel_launcher.py [ARGUMENTS]\n",
            "2024-05-23 05:36:53.223 Session state does not function when running a script without `streamlit run`\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install streamlit\n",
        "!pip install pyngrok\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "92IkWVLnRK0M",
        "outputId": "54047679-a114-4d67-ff2d-4680205933b7"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: streamlit in /usr/local/lib/python3.10/dist-packages (1.34.0)\n",
            "Requirement already satisfied: altair<6,>=4.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (4.2.2)\n",
            "Requirement already satisfied: blinker<2,>=1.0.0 in /usr/lib/python3/dist-packages (from streamlit) (1.4)\n",
            "Requirement already satisfied: cachetools<6,>=4.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (5.3.3)\n",
            "Requirement already satisfied: click<9,>=7.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (8.1.7)\n",
            "Requirement already satisfied: numpy<2,>=1.19.3 in /usr/local/lib/python3.10/dist-packages (from streamlit) (1.25.2)\n",
            "Requirement already satisfied: packaging<25,>=16.8 in /usr/local/lib/python3.10/dist-packages (from streamlit) (24.0)\n",
            "Requirement already satisfied: pandas<3,>=1.3.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (2.0.3)\n",
            "Requirement already satisfied: pillow<11,>=7.1.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (9.4.0)\n",
            "Requirement already satisfied: protobuf<5,>=3.20 in /usr/local/lib/python3.10/dist-packages (from streamlit) (3.20.3)\n",
            "Requirement already satisfied: pyarrow>=7.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (14.0.2)\n",
            "Requirement already satisfied: requests<3,>=2.27 in /usr/local/lib/python3.10/dist-packages (from streamlit) (2.31.0)\n",
            "Requirement already satisfied: rich<14,>=10.14.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (13.7.1)\n",
            "Requirement already satisfied: tenacity<9,>=8.1.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (8.3.0)\n",
            "Requirement already satisfied: toml<2,>=0.10.1 in /usr/local/lib/python3.10/dist-packages (from streamlit) (0.10.2)\n",
            "Requirement already satisfied: typing-extensions<5,>=4.3.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (4.11.0)\n",
            "Requirement already satisfied: gitpython!=3.1.19,<4,>=3.0.7 in /usr/local/lib/python3.10/dist-packages (from streamlit) (3.1.43)\n",
            "Requirement already satisfied: pydeck<1,>=0.8.0b4 in /usr/local/lib/python3.10/dist-packages (from streamlit) (0.9.1)\n",
            "Requirement already satisfied: tornado<7,>=6.0.3 in /usr/local/lib/python3.10/dist-packages (from streamlit) (6.3.3)\n",
            "Requirement already satisfied: watchdog>=2.1.5 in /usr/local/lib/python3.10/dist-packages (from streamlit) (4.0.0)\n",
            "Requirement already satisfied: entrypoints in /usr/local/lib/python3.10/dist-packages (from altair<6,>=4.0->streamlit) (0.4)\n",
            "Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from altair<6,>=4.0->streamlit) (3.1.4)\n",
            "Requirement already satisfied: jsonschema>=3.0 in /usr/local/lib/python3.10/dist-packages (from altair<6,>=4.0->streamlit) (4.19.2)\n",
            "Requirement already satisfied: toolz in /usr/local/lib/python3.10/dist-packages (from altair<6,>=4.0->streamlit) (0.12.1)\n",
            "Requirement already satisfied: gitdb<5,>=4.0.1 in /usr/local/lib/python3.10/dist-packages (from gitpython!=3.1.19,<4,>=3.0.7->streamlit) (4.0.11)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas<3,>=1.3.0->streamlit) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas<3,>=1.3.0->streamlit) (2023.4)\n",
            "Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas<3,>=1.3.0->streamlit) (2024.1)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27->streamlit) (3.3.2)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27->streamlit) (3.7)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27->streamlit) (2.0.7)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27->streamlit) (2024.2.2)\n",
            "Requirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.10/dist-packages (from rich<14,>=10.14.0->streamlit) (3.0.0)\n",
            "Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from rich<14,>=10.14.0->streamlit) (2.16.1)\n",
            "Requirement already satisfied: smmap<6,>=3.0.1 in /usr/local/lib/python3.10/dist-packages (from gitdb<5,>=4.0.1->gitpython!=3.1.19,<4,>=3.0.7->streamlit) (5.0.1)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->altair<6,>=4.0->streamlit) (2.1.5)\n",
            "Requirement already satisfied: attrs>=22.2.0 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (23.2.0)\n",
            "Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (2023.12.1)\n",
            "Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.35.1)\n",
            "Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.18.1)\n",
            "Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.10/dist-packages (from markdown-it-py>=2.2.0->rich<14,>=10.14.0->streamlit) (0.1.2)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas<3,>=1.3.0->streamlit) (1.16.0)\n",
            "Requirement already satisfied: pyngrok in /usr/local/lib/python3.10/dist-packages (7.1.6)\n",
            "Requirement already satisfied: PyYAML>=5.1 in /usr/local/lib/python3.10/dist-packages (from pyngrok) (6.0.1)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import streamlit as st\n",
        "import joblib\n",
        "import numpy as np\n",
        "\n",
        "# Load the trained model and TF-IDF vectorizer\n",
        "model = joblib.load('svm_model.joblib')\n",
        "vectorizer = joblib.load('tfidf_vectorizer.joblib')\n",
        "\n",
        "# Streamlit app title\n",
        "st.title('Reddit Comment Classifier')\n",
        "\n",
        "# Input text box for user to enter a Reddit comment\n",
        "comment = st.text_area('Enter a Reddit comment:', '')\n",
        "\n",
        "# Classify the comment when the button is clicked\n",
        "if st.button('Classify'):\n",
        "    if comment:\n",
        "        # Transform the comment using the loaded TF-IDF vectorizer\n",
        "        comment_tfidf = vectorizer.transform([comment])\n",
        "\n",
        "        # Predict the sentiment using the loaded model\n",
        "        prediction = model.predict(comment_tfidf)\n",
        "\n",
        "        # Display the result\n",
        "        st.write('Prediction:', 'Positive' if prediction[0] == 1 else 'Negative')\n",
        "    else:\n",
        "        st.write('Please enter a comment.')\n"
      ],
      "metadata": {
        "id": "bVGmh0l--dbb"
      },
      "execution_count": 34,
      "outputs": []
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNZJizsb9XQ4MG7Q+BC4i6x",
      "include_colab_link": True
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
streamlit
scikit-learn
joblib
spacy
import streamlit as st
import joblib
import spacy

# Load spaCy model (if required by the preprocessing pipeline)
nlp = spacy.load('en_core_web_sm')

# Load the trained model and TF-IDF vectorizer
model = joblib.load('svm_model.joblib')
vectorizer = joblib.load('tfidf_vectorizer.joblib')

# Streamlit app title
st.title('Reddit Comment Classifier')

# Input text box for user to enter a Reddit comment
comment = st.text_area('Enter a Reddit comment:', '')

# Classify the comment when the button is clicked
if st.button('Classify'):
    if comment:
        # Transform the comment using the loaded TF-IDF vectorizer
        comment_tfidf = vectorizer.transform([comment])

        # Predict the sentiment using the loaded model
        prediction = model.predict(comment_tfidf)

        # Display the result
        st.write('Prediction:', 'Positive' if prediction[0] == 1 else 'Negative')
    else:
        st.write('Please enter a comment.')
